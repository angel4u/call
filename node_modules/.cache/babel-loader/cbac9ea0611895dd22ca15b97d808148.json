{"ast":null,"code":"import _taggedTemplateLiteral from\"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject9(){var data=_taggedTemplateLiteral([\"\\n  margin-left: 12px;\\n  margin-right: 12px;\\n\\n  display: flex;\\n  flex-wrap: nowrap;\\n  -webkit-box-flex: 1;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  flex-direction: column;\\n  padding: 0.4rem 0.5rem 0.4rem 0.5rem;\\n\\n  border-width: 0px 0px 1px;\\n  border-top-style: solid;\\n  border-right-style: solid;\\n  border-bottom-style: solid;\\n  border-left-style: solid;\\n  border-color: rgb(198, 202, 215);\\n  color: rgb(34, 34, 34);\\n  background: #ffffff;\\n  cursor: pointer;\\n  &:hover {\\n    background: #e8e8e8;\\n  }\\n  &:hover \",\" {\\n    display: inline;\\n  }\\n\"]);_templateObject9=function _templateObject9(){return data;};return data;}function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  flex: 0 0 auto;\\n  margin-left: 4px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  vertical-align: middle;\\n  display: none;\\n\\n  &:hover {\\n    color: \",\";\\n  }\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  flex: 0 0 auto;\\n  margin-left: 4px;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  vertical-align: middle;\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  flex: 0 0 auto;\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  flex: 1 1 auto;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  margin-right: 8px;\\n  font-weight: bold;\\n  overflow: hidden;\\n  flex: 0 1 auto;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  margin: 4px 0 3px 0;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  line-height: 1.2em;\\n  max-height: 1.2em;\\n  flex: 1 1 auto;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  -webkit-box-pack: justify;\\n  justify-content: space-between;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  -webkit-box-flex: 1;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  flex-direction: row;\\n  align-items: center;\\n  vertical-align: middle;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  -webkit-box-pack: justify;\\n  justify-content: space-between;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  -webkit-box-flex: 1;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  flex-direction: row;\\n  align-items: center;\\n  vertical-align: middle;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import{printTimestamp,formatBodyPreviewText}from'../helpers.js';import{parsePhoneNumberFromString}from'libphonenumber-js';import{BadgeAfter}from'./CommonComponents';var accent=process.env.REACT_APP_ACCENT_COLOR;function MsgContactList(props){var trashClick=function trashClick(phoneNumber,e){e.stopPropagation();if(window.confirm(\"Are you sure you want to delete all messages to '\".concat(phoneNumber,\"' ?\")))props.deleteThread(phoneNumber);};return/*#__PURE__*/React.createElement(\"div\",null,Object.keys(props.channelList).sort(function(a,b){if(props.channelList[a].lastMessage&&props.channelList[b].lastMessage){return props.channelList[a].lastMessage.timestamp>props.channelList[b].lastMessage.timestamp?-1:1;}else{return 0;}}).map(function(phoneNumber){var phoneNumberParsed=parsePhoneNumberFromString(phoneNumber)?parsePhoneNumberFromString(phoneNumber).formatInternational():phoneNumber;return/*#__PURE__*/React.createElement(Contact,{key:phoneNumber,onClick:props.selectContact.bind(null,phoneNumber)},/*#__PURE__*/React.createElement(Header,null,/*#__PURE__*/React.createElement(Author,null,phoneNumberParsed),/*#__PURE__*/React.createElement(BadgeContainer,null,props.msgUnreadsCache[phoneNumber]>0&&/*#__PURE__*/React.createElement(BadgeAfter,null,props.msgUnreadsCache[phoneNumber])),/*#__PURE__*/React.createElement(TimeStamp,null,props.channelList[phoneNumber].lastMessage?printTimestamp(props.channelList[phoneNumber].lastMessage.timestamp):''),/*#__PURE__*/React.createElement(Arrow,null,SvgFwdArrow)),/*#__PURE__*/React.createElement(Body,null,/*#__PURE__*/React.createElement(BodyPreview,null,props.msgCache[phoneNumber]&&props.msgCache[phoneNumber][props.msgCache[phoneNumber].length-1]?formatBodyPreviewText(props.msgCache[phoneNumber][props.msgCache[phoneNumber].length-1].body):'...'),/*#__PURE__*/React.createElement(Trash,{onClick:trashClick.bind(null,phoneNumber)})));}));}var Header=styled.div(_templateObject());var Body=styled.div(_templateObject2());var BodyPreview=styled.div(_templateObject3());var Author=styled.div(_templateObject4());var BadgeContainer=styled.div(_templateObject5());var TimeStamp=styled.div(_templateObject6());var Arrow=styled.div(_templateObject7());var SvgFwdArrow=/*#__PURE__*/React.createElement(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",fillRule:\"evenodd\",strokeLinejoin:\"round\",strokeMiterlimit:\"2\",clipRule:\"evenodd\",viewBox:\"0 0 7 12\",height:\"12px\",width:\"7px\"},/*#__PURE__*/React.createElement(\"path\",{fill:\"#565b73\",d:\"M1.693.296l4.722 5.17a.814.814 0 010 1.068l-4.722 5.169a.683.683 0 01-1.037 0 .939.939 0 010-1.23l3.956-4.33a.219.219 0 000-.286L.656 1.527a.94.94 0 010-1.231.704.704 0 01.518-.237c.187 0 .374.079.519.237z\"}));var SvgTrash=function SvgTrash(props){return/*#__PURE__*/React.createElement(\"svg\",Object.assign({viewBox:\"0 0 192 209\",fillRule:\"evenodd\",clipRule:\"evenodd\",strokeLinejoin:\"round\",strokeMiterlimit:2,height:\"12px\",width:\"12px\"},props),/*#__PURE__*/React.createElement(\"path\",{d:\"M69.792 82.474v78.125c0 2.439-1.901 4.34-4.341 4.34h-8.68c-2.439 0-4.34-1.901-4.34-4.34V82.474c0-2.439 1.901-4.34 4.34-4.34h8.68c2.44 0 4.341 1.901 4.341 4.34zm34.722 0v78.125c0 2.439-1.901 4.34-4.34 4.34h-8.681c-2.439 0-4.34-1.901-4.34-4.34V82.474c0-2.439 1.901-4.34 4.34-4.34h8.681c2.439 0 4.34 1.901 4.34 4.34zm34.722 0v78.125c0 2.439-1.901 4.34-4.34 4.34h-8.681c-2.439 0-4.34-1.901-4.34-4.34V82.474c0-2.439 1.901-4.34 4.34-4.34h8.681c2.439 0 4.34 1.901 4.34 4.34zm17.361 98.203V52.101H35.069v128.576c0 6.511 3.664 10.313 4.341 10.313h112.847c.677 0 4.34-3.802 4.34-10.313zM65.451 34.731h60.764l-6.51-15.868c-.408-.547-1.623-1.354-2.309-1.493H74.401c-.816.139-1.901.946-2.309 1.493l-6.641 15.868zm125.868 4.332v8.689c0 2.439-1.901 4.34-4.34 4.34h-13.021v128.576c0 14.922-9.765 27.665-21.701 27.665H39.41c-11.936 0-21.702-12.205-21.702-27.126V52.083H4.687c-2.439 0-4.34-1.901-4.34-4.34v-8.68c0-2.44 1.901-4.341 4.34-4.341h41.91l9.497-22.647C58.811 5.425 66.944 0 74.132 0h43.403c7.187 0 15.33 5.425 18.038 12.075l9.496 22.647h41.91c2.439 0 4.34 1.901 4.34 4.341z\",fill:\"currentColor\",fillRule:\"nonzero\"}));};var Trash=styled(SvgTrash)(_templateObject8(),accent);var Contact=styled.div(_templateObject9(),Trash);export default MsgContactList;","map":{"version":3,"sources":["/root/twilio-phone-client/src/components/MsgContactList.js"],"names":["React","styled","printTimestamp","formatBodyPreviewText","parsePhoneNumberFromString","BadgeAfter","accent","process","env","REACT_APP_ACCENT_COLOR","MsgContactList","props","trashClick","phoneNumber","e","stopPropagation","window","confirm","deleteThread","Object","keys","channelList","sort","a","b","lastMessage","timestamp","map","phoneNumberParsed","formatInternational","selectContact","bind","msgUnreadsCache","SvgFwdArrow","msgCache","length","body","Header","div","Body","BodyPreview","Author","BadgeContainer","TimeStamp","Arrow","SvgTrash","Trash","Contact"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { printTimestamp, formatBodyPreviewText } from '../helpers.js';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\nimport { BadgeAfter } from './CommonComponents';\nconst accent = process.env.REACT_APP_ACCENT_COLOR;\n\nfunction MsgContactList(props) {\n  const trashClick = (phoneNumber, e) => {\n    e.stopPropagation();\n    if (\n      window.confirm(\n        `Are you sure you want to delete all messages to '${phoneNumber}' ?`\n      )\n    )\n      props.deleteThread(phoneNumber);\n  };\n\n  return (\n    <div>\n      {Object.keys(props.channelList)\n        .sort((a, b) => {\n          if (\n            props.channelList[a].lastMessage &&\n            props.channelList[b].lastMessage\n          ) {\n            return props.channelList[a].lastMessage.timestamp >\n              props.channelList[b].lastMessage.timestamp\n              ? -1\n              : 1;\n          } else {\n            return 0;\n          }\n        })\n        .map((phoneNumber) => {\n          const phoneNumberParsed = parsePhoneNumberFromString(phoneNumber)\n            ? parsePhoneNumberFromString(phoneNumber).formatInternational()\n            : phoneNumber;\n          return (\n            <Contact\n              key={phoneNumber}\n              onClick={props.selectContact.bind(null, phoneNumber)}\n            >\n              <Header>\n                <Author>{phoneNumberParsed}</Author>\n                <BadgeContainer>\n                  {props.msgUnreadsCache[phoneNumber] > 0 && (\n                    <BadgeAfter>\n                      {props.msgUnreadsCache[phoneNumber]}\n                    </BadgeAfter>\n                  )}\n                </BadgeContainer>\n                <TimeStamp>\n                  {props.channelList[phoneNumber].lastMessage\n                    ? printTimestamp(\n                        props.channelList[phoneNumber].lastMessage.timestamp\n                      )\n                    : ''}\n                </TimeStamp>\n                <Arrow>{SvgFwdArrow}</Arrow>\n              </Header>\n              <Body>\n                <BodyPreview>\n                  {props.msgCache[phoneNumber] &&\n                  props.msgCache[phoneNumber][\n                    props.msgCache[phoneNumber].length - 1\n                  ]\n                    ? formatBodyPreviewText(\n                        props.msgCache[phoneNumber][\n                          props.msgCache[phoneNumber].length - 1\n                        ].body\n                      )\n                    : '...'}\n                </BodyPreview>\n                <Trash onClick={trashClick.bind(null, phoneNumber)} />\n              </Body>\n            </Contact>\n          );\n        })}\n    </div>\n  );\n}\n\nconst Header = styled.div`\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: row;\n  align-items: center;\n  vertical-align: middle;\n`;\n\nconst Body = styled.div`\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: row;\n  align-items: center;\n  vertical-align: middle;\n`;\n\nconst BodyPreview = styled.div`\n  font-size: 14px;\n  margin: 4px 0 3px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 1.2em;\n  max-height: 1.2em;\n  flex: 1 1 auto;\n`;\n\nconst Author = styled.div`\n  font-size: 14px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-right: 8px;\n  font-weight: bold;\n  overflow: hidden;\n  flex: 0 1 auto;\n`;\n\nconst BadgeContainer = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst TimeStamp = styled.div`\n  font-size: 12px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  flex: 0 0 auto;\n`;\n\nconst Arrow = styled.div`\n  margin-top: 0px;\n  margin-bottom: 0px;\n  flex: 0 0 auto;\n  margin-left: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  vertical-align: middle;\n`;\n\nconst SvgFwdArrow = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fillRule=\"evenodd\"\n    strokeLinejoin=\"round\"\n    strokeMiterlimit=\"2\"\n    clipRule=\"evenodd\"\n    viewBox=\"0 0 7 12\"\n    height=\"12px\"\n    width=\"7px\"\n  >\n    <path\n      fill=\"#565b73\"\n      d=\"M1.693.296l4.722 5.17a.814.814 0 010 1.068l-4.722 5.169a.683.683 0 01-1.037 0 .939.939 0 010-1.23l3.956-4.33a.219.219 0 000-.286L.656 1.527a.94.94 0 010-1.231.704.704 0 01.518-.237c.187 0 .374.079.519.237z\"\n    ></path>\n  </svg>\n);\n\nconst SvgTrash = (props) => (\n  <svg\n    viewBox=\"0 0 192 209\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    strokeLinejoin=\"round\"\n    strokeMiterlimit={2}\n    height=\"12px\"\n    width=\"12px\"\n    {...props}\n  >\n    <path\n      d=\"M69.792 82.474v78.125c0 2.439-1.901 4.34-4.341 4.34h-8.68c-2.439 0-4.34-1.901-4.34-4.34V82.474c0-2.439 1.901-4.34 4.34-4.34h8.68c2.44 0 4.341 1.901 4.341 4.34zm34.722 0v78.125c0 2.439-1.901 4.34-4.34 4.34h-8.681c-2.439 0-4.34-1.901-4.34-4.34V82.474c0-2.439 1.901-4.34 4.34-4.34h8.681c2.439 0 4.34 1.901 4.34 4.34zm34.722 0v78.125c0 2.439-1.901 4.34-4.34 4.34h-8.681c-2.439 0-4.34-1.901-4.34-4.34V82.474c0-2.439 1.901-4.34 4.34-4.34h8.681c2.439 0 4.34 1.901 4.34 4.34zm17.361 98.203V52.101H35.069v128.576c0 6.511 3.664 10.313 4.341 10.313h112.847c.677 0 4.34-3.802 4.34-10.313zM65.451 34.731h60.764l-6.51-15.868c-.408-.547-1.623-1.354-2.309-1.493H74.401c-.816.139-1.901.946-2.309 1.493l-6.641 15.868zm125.868 4.332v8.689c0 2.439-1.901 4.34-4.34 4.34h-13.021v128.576c0 14.922-9.765 27.665-21.701 27.665H39.41c-11.936 0-21.702-12.205-21.702-27.126V52.083H4.687c-2.439 0-4.34-1.901-4.34-4.34v-8.68c0-2.44 1.901-4.341 4.34-4.341h41.91l9.497-22.647C58.811 5.425 66.944 0 74.132 0h43.403c7.187 0 15.33 5.425 18.038 12.075l9.496 22.647h41.91c2.439 0 4.34 1.901 4.34 4.341z\"\n      fill=\"currentColor\"\n      fillRule=\"nonzero\"\n    />\n  </svg>\n);\n\nconst Trash = styled(SvgTrash)`\n  margin-top: 0px;\n  margin-bottom: 0px;\n  flex: 0 0 auto;\n  margin-left: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  vertical-align: middle;\n  display: none;\n\n  &:hover {\n    color: ${accent};\n  }\n`;\n\nconst Contact = styled.div`\n  margin-left: 12px;\n  margin-right: 12px;\n\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: column;\n  padding: 0.4rem 0.5rem 0.4rem 0.5rem;\n\n  border-width: 0px 0px 1px;\n  border-top-style: solid;\n  border-right-style: solid;\n  border-bottom-style: solid;\n  border-left-style: solid;\n  border-color: rgb(198, 202, 215);\n  color: rgb(34, 34, 34);\n  background: #ffffff;\n  cursor: pointer;\n  &:hover {\n    background: #e8e8e8;\n  }\n  &:hover ${Trash} {\n    display: inline;\n  }\n`;\n\nexport default MsgContactList;\n"]},"metadata":{},"sourceType":"module"}