{"ast":null,"code":"import _taggedTemplateLiteral from\"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n  height: 100vh;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import MsgCanvas from'./MsgCanvas';import CallCanvas from'./CallCanvas';function ChannelContent(props){if(props.selectedChannel==='sms'){return/*#__PURE__*/React.createElement(MsgCanvas,{client:props.client,channelList:props.channelList,secret:props.secret,msgUnreadsCache:props.msgUnreadsCache,setUnreadMsgs:props.setUnreadMsgs,setUnreadsCache:props.setUnreadsCache,msgCache:props.msgCache,msgPgtrCache:props.msgPgtrCache,addMsgCachePage:props.addMsgCachePage,setMsgCachePage:props.setMsgCachePage,addMsgCacheMsg:props.addMsgCacheMsg});}else if(props.selectedChannel==='call'){return/*#__PURE__*/React.createElement(CallCanvas,{client:props.client,incomingCall:props.incomingCall,setCallDisplay:props.setCallDisplay,callDisplay:props.callDisplay,setCallConnection:props.setCallConnection,getCallConnection:props.getCallConnection,setCallStartTime:props.setCallStartTime,getCallStartTime:props.getCallStartTime,setCallNextKeyReset:props.setCallNextKeyReset,getCallNextKeyReset:props.getCallNextKeyReset,setCallTypingPN:props.setCallTypingPN,getCallTypingPN:props.getCallTypingPN});}else{return/*#__PURE__*/React.createElement(AltCanvas,null,\"Channel not supported\");}}var AltCanvas=styled.div(_templateObject());export default ChannelContent;","map":{"version":3,"sources":["/root/twilio-phone-client/src/components/ChannelContent.js"],"names":["React","styled","MsgCanvas","CallCanvas","ChannelContent","props","selectedChannel","client","channelList","secret","msgUnreadsCache","setUnreadMsgs","setUnreadsCache","msgCache","msgPgtrCache","addMsgCachePage","setMsgCachePage","addMsgCacheMsg","incomingCall","setCallDisplay","callDisplay","setCallConnection","getCallConnection","setCallStartTime","getCallStartTime","setCallNextKeyReset","getCallNextKeyReset","setCallTypingPN","getCallTypingPN","AltCanvas","div"],"mappings":"wSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC7B,GAAIA,KAAK,CAACC,eAAN,GAA0B,KAA9B,CAAqC,CACnC,mBACE,oBAAC,SAAD,EACE,MAAM,CAAED,KAAK,CAACE,MADhB,CAEE,WAAW,CAAEF,KAAK,CAACG,WAFrB,CAGE,MAAM,CAAEH,KAAK,CAACI,MAHhB,CAIE,eAAe,CAAEJ,KAAK,CAACK,eAJzB,CAKE,aAAa,CAAEL,KAAK,CAACM,aALvB,CAME,eAAe,CAAEN,KAAK,CAACO,eANzB,CAOE,QAAQ,CAAEP,KAAK,CAACQ,QAPlB,CAQE,YAAY,CAAER,KAAK,CAACS,YARtB,CASE,eAAe,CAAET,KAAK,CAACU,eATzB,CAUE,eAAe,CAAEV,KAAK,CAACW,eAVzB,CAWE,cAAc,CAAEX,KAAK,CAACY,cAXxB,EADF,CAeD,CAhBD,IAgBO,IAAIZ,KAAK,CAACC,eAAN,GAA0B,MAA9B,CAAsC,CAC3C,mBACE,oBAAC,UAAD,EACE,MAAM,CAAED,KAAK,CAACE,MADhB,CAEE,YAAY,CAAEF,KAAK,CAACa,YAFtB,CAGE,cAAc,CAAEb,KAAK,CAACc,cAHxB,CAIE,WAAW,CAAEd,KAAK,CAACe,WAJrB,CAKE,iBAAiB,CAAEf,KAAK,CAACgB,iBAL3B,CAME,iBAAiB,CAAEhB,KAAK,CAACiB,iBAN3B,CAOE,gBAAgB,CAAEjB,KAAK,CAACkB,gBAP1B,CAQE,gBAAgB,CAAElB,KAAK,CAACmB,gBAR1B,CASE,mBAAmB,CAAEnB,KAAK,CAACoB,mBAT7B,CAUE,mBAAmB,CAAEpB,KAAK,CAACqB,mBAV7B,CAWE,eAAe,CAAErB,KAAK,CAACsB,eAXzB,CAYE,eAAe,CAAEtB,KAAK,CAACuB,eAZzB,EADF,CAgBD,CAjBM,IAiBA,CACL,mBAAO,oBAAC,SAAD,8BAAP,CACD,CACF,CAED,GAAMC,CAAAA,SAAS,CAAG5B,MAAM,CAAC6B,GAAV,mBAAf,CAKA,cAAe1B,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport MsgCanvas from './MsgCanvas';\nimport CallCanvas from './CallCanvas';\n\nfunction ChannelContent(props) {\n  if (props.selectedChannel === 'sms') {\n    return (\n      <MsgCanvas\n        client={props.client}\n        channelList={props.channelList}\n        secret={props.secret}\n        msgUnreadsCache={props.msgUnreadsCache}\n        setUnreadMsgs={props.setUnreadMsgs}\n        setUnreadsCache={props.setUnreadsCache}\n        msgCache={props.msgCache}\n        msgPgtrCache={props.msgPgtrCache}\n        addMsgCachePage={props.addMsgCachePage}\n        setMsgCachePage={props.setMsgCachePage}\n        addMsgCacheMsg={props.addMsgCacheMsg}\n      />\n    );\n  } else if (props.selectedChannel === 'call') {\n    return (\n      <CallCanvas\n        client={props.client}\n        incomingCall={props.incomingCall}\n        setCallDisplay={props.setCallDisplay}\n        callDisplay={props.callDisplay}\n        setCallConnection={props.setCallConnection}\n        getCallConnection={props.getCallConnection}\n        setCallStartTime={props.setCallStartTime}\n        getCallStartTime={props.getCallStartTime}\n        setCallNextKeyReset={props.setCallNextKeyReset}\n        getCallNextKeyReset={props.getCallNextKeyReset}\n        setCallTypingPN={props.setCallTypingPN}\n        getCallTypingPN={props.getCallTypingPN}\n      />\n    );\n  } else {\n    return <AltCanvas>Channel not supported</AltCanvas>;\n  }\n}\n\nconst AltCanvas = styled.div`\n  flex-grow: 1;\n  height: 100vh;\n`;\n\nexport default ChannelContent;\n"]},"metadata":{},"sourceType":"module"}