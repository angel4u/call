{"ast":null,"code":"/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps); // Map ICE parameters (ufrag, pwd) to SDP.\n\n  sdp += SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters()); // Map DTLS parameters to SDP.\n\n  sdp += SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(), type === 'offer' ? 'actpass' : dtlsRole || 'active');\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId || transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId; // spec.\n\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' + trackId + '\\r\\n';\n    sdp += 'a=' + msid; // for Chrome. Legacy should no longer be required.\n\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' ' + msid; // RTX\n\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' + transceiver.sendEncodingParameters[0].ssrc + ' ' + transceiver.sendEncodingParameters[0].rtx.ssrc + '\\r\\n';\n    }\n  } // FIXME: this should be written by writeRtpDescription.\n\n\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n\n  return sdp;\n} // Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\n\n\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n\n      var isString = typeof urls === 'string';\n\n      if (isString) {\n        urls = [urls];\n      }\n\n      urls = urls.filter(function (url) {\n        var validTurn = url.indexOf('turn:') === 0 && url.indexOf('transport=udp') !== -1 && url.indexOf('turn:[') === -1 && !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 && url.indexOf('?transport=udp') === -1;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n} // Determines the intersection of local and remote capabilities.\n\n\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function findCodecByPayloadType(pt, codecs) {\n    pt = parseInt(pt, 10);\n\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt || codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function rtxCapabilityMatches(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec && lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function (lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() && lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' && lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec, localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n\n        rCodec.numChannels = Math.min(lCodec.numChannels, rCodec.numChannels); // push rCodec so we reply with offerer payload type\n\n        commonCapabilities.codecs.push(rCodec); // determine common feedback mechanisms\n\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function (fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type && lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n\n          return false;\n        }); // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n\n        break;\n      }\n    }\n  });\n  localCapabilities.headerExtensions.forEach(function (lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length; i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  }); // FIXME: fecMechanisms\n\n  return commonCapabilities;\n} // is action=setLocalDescription with type allowed in signalingState\n\n\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldÑ• are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates().find(function (remoteCandidate) {\n    return candidate.foundation === remoteCandidate.foundation && candidate.ip === remoteCandidate.ip && candidate.port === remoteCandidate.port && candidate.priority === remoteCandidate.priority && candidate.protocol === remoteCandidate.protocol && candidate.type === remoteCandidate.type;\n  });\n\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n\n  return !alreadyAdded;\n}\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  return e;\n}\n\nmodule.exports = function (window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack', {\n      track: track\n    }));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack', {\n      track: track\n    }));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {\n      receiver: receiver\n    };\n    trackEvent.streams = streams;\n    window.setTimeout(function () {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function RTCPeerConnection(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n\n    ['addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(function (method) {\n      pc[method] = _eventTarget[method].bind(_eventTarget);\n    });\n    this.canTrickleIceCandidates = null;\n    this.needNegotiation = false;\n    this.localStreams = [];\n    this.remoteStreams = [];\n    this.localDescription = null;\n    this.remoteDescription = null;\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n    config = JSON.parse(JSON.stringify(config || {}));\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw makeError('NotSupportedError', 'rtcpMuxPolicy \\'negotiate\\' is not supported');\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n    this._iceGatherers = [];\n\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config; // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n\n    this.transceivers = [];\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  }; // set up event handlers on prototype\n\n\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function (name, event) {\n    if (this._isClosed) {\n      return;\n    }\n\n    this.dispatchEvent(event);\n\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function () {\n    var event = new Event('icegatheringstatechange');\n\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function () {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function () {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function () {\n    return this.remoteStreams;\n  }; // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n\n\n  RTCPeerConnection.prototype._createTransceiver = function (kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function (track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function (s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track && this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track, transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function (stream) {\n    var pc = this;\n\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function (track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function (track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function (event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function (sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function (t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError', 'Sender was not created by this connection.');\n    }\n\n    var stream = transceiver.stream;\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null; // remove the stream from the set of local streams\n\n    var localStreams = this.transceivers.map(function (t) {\n      return t.stream;\n    });\n\n    if (localStreams.indexOf(stream) === -1 && this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function (stream) {\n    var pc = this;\n    stream.getTracks().forEach(function (track) {\n      var sender = pc.getSenders().find(function (s) {\n        return s.track === track;\n      });\n\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpSender;\n    }).map(function (transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpReceiver;\n    }).map(function (transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n  RTCPeerConnection.prototype._createIceGatherer = function (sdpMLineIndex, usingBundle) {\n    var pc = this;\n\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state', {\n      value: 'new',\n      writable: true\n    });\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n\n    this.transceivers[sdpMLineIndex].bufferCandidates = function (event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0; // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n\n      iceGatherer.state = end ? 'completed' : 'gathering';\n\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n\n    iceGatherer.addEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  }; // start gathering from an RTCIceGatherer.\n\n\n  RTCPeerConnection.prototype._gather = function (mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n\n    var bufferedCandidateEvents = this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n\n    iceGatherer.onlocalcandidate = function (evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // Ñ•dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n\n      var event = new Event('icecandidate');\n      event.candidate = {\n        sdpMid: mid,\n        sdpMLineIndex: sdpMLineIndex\n      };\n      var cand = evt.candidate; // Edge emits an empty object for RTCIceCandidateCompleteâ€¥\n\n      var end = !cand || Object.keys(cand).length === 0;\n\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        } // RTCIceCandidate doesn't have a component, needs to be added\n\n\n        cand.component = 1;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate, SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n      } // update local description.\n\n\n      var sections = SDPUtils.getMediaSections(pc.localDescription.sdp);\n\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] += 'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] += 'a=end-of-candidates\\r\\n';\n      }\n\n      pc.localDescription.sdp = SDPUtils.getDescription(pc.localDescription.sdp) + sections.join('');\n      var complete = pc.transceivers.every(function (transceiver) {\n        return transceiver.iceGatherer && transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n\n        pc._emitGatheringStateChange();\n      } // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n\n\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n\n        pc.iceGatheringState = 'complete';\n\n        pc._emitGatheringStateChange();\n      }\n    }; // emit already gathered candidates.\n\n\n    window.setTimeout(function () {\n      bufferedCandidateEvents.forEach(function (e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  }; // Create ICE transport and DTLS transport.\n\n\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function () {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n\n    iceTransport.onicestatechange = function () {\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n\n    dtlsTransport.ondtlsstatechange = function () {\n      pc._updateConnectionState();\n    };\n\n    dtlsTransport.onerror = function () {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state', {\n        value: 'failed',\n        writable: true\n      });\n\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  }; // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n\n\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function (sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  }; // Start the RTP Sender and Receiver for a transceiver.\n\n\n  RTCPeerConnection.prototype._transceive = function (transceiver, send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n\n      transceiver.rtpSender.send(params);\n    }\n\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video' && transceiver.recvEncodingParameters && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function (p) {\n          delete p.rtx;\n        });\n      }\n\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function (description) {\n    var pc = this; // Note: pranswer is not supported.\n\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set local ' + description.type + ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n      pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities; // treat bundle-only as not-rejected.\n\n        var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters, isIceLite ? 'controlling' : 'controlled');\n            }\n\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          } // Calculate intersection of capabilities.\n\n\n          var params = getCommonCapabilities(localCapabilities, remoteCapabilities); // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n\n          pc._transceive(transceiver, params.codecs.length > 0, false);\n        }\n      });\n    }\n\n    pc.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function (description) {\n    var pc = this; // Note: pranswer is not supported.\n\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set remote ' + description.type + ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function (stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart, 'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart, 'a=ice-options:')[0];\n\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ').indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function (mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection); // treat bundle-only as not-rejected.\n\n      var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier(); // Reject datachannels which are not implemented yet.\n\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n      var track; // FIXME: ensure the mediaSection has rtcp-mux set.\n\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n\n      recvEncodingParameters = SDPUtils.parseRtpEncodingParameters(mediaSection);\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n      var isComplete = SDPUtils.matchPrefix(mediaSection, 'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:').map(function (cand) {\n        return SDPUtils.parseCandidate(cand);\n      }).filter(function (cand) {\n        return cand.component === 1;\n      }); // Check if we can use BUNDLE and dispose transports.\n\n      if ((description.type === 'offer' || description.type === 'answer') && !rejected && usingBundle && sdpMLineIndex > 0 && pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n\n        pc.transceivers[sdpMLineIndex].iceGatherer = pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport = pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport = pc.transceivers[0].dtlsTransport;\n\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n      }\n\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] || pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind); // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n            return codec.name !== 'rtx';\n          });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }]; // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n\n        var isNewTrack = false;\n\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver || new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track; // FIXME: does not work with Plan B.\n\n            if (remoteMsid && remoteMsid.stream === '-') {// no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function get() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n\n              Object.defineProperty(track, 'id', {\n                get: function get() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n\n              stream = streams.default;\n            }\n\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function (s) {\n            var nativeTrack = s.getTracks().find(function (t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters; // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n\n        pc._transceive(pc.transceivers[sdpMLineIndex], false, isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters = recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities = remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) && (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters, 'controlling');\n          }\n\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        pc._transceive(transceiver, direction === 'sendrecv' || direction === 'recvonly', direction === 'sendrecv' || direction === 'sendonly'); // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n\n\n        if (rtpReceiver && (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    Object.keys(streams).forEach(function (sid) {\n      var stream = streams[sid];\n\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function () {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function (item) {\n          var track = item[0];\n          var receiver = item[1];\n\n          if (stream.id !== item[2].id) {\n            return;\n          }\n\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function (item) {\n      if (item[2]) {\n        return;\n      }\n\n      fireAddTrack(pc, item[0], item[1], []);\n    }); // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n\n    window.setTimeout(function () {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n\n      pc.transceivers.forEach(function (transceiver) {\n        if (transceiver.iceTransport && transceiver.iceTransport.state === 'new' && transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' + 'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function () {\n    this.transceivers.forEach(function (transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    }); // FIXME: clean up tracks, local streams, remote streams, etc\n\n    this._isClosed = true;\n\n    this._updateSignalingState('closed');\n  }; // Update the signaling state.\n\n\n  RTCPeerConnection.prototype._updateSignalingState = function (newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n\n    this._dispatchEvent('signalingstatechange', event);\n  }; // Determine whether to fire the negotiationneeded event.\n\n\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function () {\n    var pc = this;\n\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n\n    this.needNegotiation = true;\n    window.setTimeout(function () {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  }; // Update the connection state.\n\n\n  RTCPeerConnection.prototype._updateConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    }); // ICETransport.completed and connected are the same for this purpose.\n\n    states.connected += states.completed;\n    newState = 'new';\n\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function () {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'video';\n    }).length; // Determine number of audio and video tracks we need to send/recv.\n\n    var offerOptions = arguments[0];\n\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError('Legacy mandatory/optional constraints not supported.');\n      }\n\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function (transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    }); // Create M-lines for recvonly streams.\n\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n\n        numAudioTracks--;\n      }\n\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind); // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n          return codec.name !== 'rtx';\n        });\n      }\n\n      localCapabilities.codecs.forEach(function (codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' && codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        } // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n\n\n        if (transceiver.remoteCapabilities && transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function (remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() && codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function (hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities && transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function (rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      }); // generate an ssrc now, to be used later in rtpSender.send\n\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' && !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    }); // always offer BUNDLE and dispose on return if not supported.\n\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n\n    sdp += 'a=ice-options:trickle\\r\\n';\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities, 'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' && (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function (cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function () {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer after close'));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(pc.remoteDescription.sdp).length;\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' + 'c=IN IP4 0.0.0.0\\r\\n' + 'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      } // FIXME: look at direction.\n\n\n      if (transceiver.stream) {\n        var localTrack;\n\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' && !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      } // Calculate intersection of capabilities.\n\n\n      var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n      var hasRtx = commonCapabilities.codecs.filter(function (c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities, 'answer', transceiver.stream, pc._dtlsRole);\n\n      if (transceiver.rtcpParameters && transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function (candidate) {\n    var pc = this;\n    var sections;\n\n    if (candidate && !(candidate.sdpMLineIndex !== undefined || candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    } // TODO: needs to go into ops queue.\n\n\n    return new Promise(function (resolve, reject) {\n      if (!pc.remoteDescription) {\n        return reject(makeError('InvalidStateError', 'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].isDatachannel) {\n            continue;\n          }\n\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc.remoteDescription.sdp = SDPUtils.getDescription(pc.remoteDescription.sdp) + sections.join('');\n\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n\n        var transceiver = pc.transceivers[sdpMLineIndex];\n\n        if (transceiver) {\n          if (transceiver.isDatachannel) {\n            return resolve();\n          }\n\n          var cand = Object.keys(candidate.candidate).length > 0 ? SDPUtils.parseCandidate(candidate.candidate) : {}; // Ignore Chrome's invalid candidates since Edge does not like them.\n\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          } // Ignore RTCP candidates, we assume RTCP-MUX.\n\n\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          } // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n\n\n          if (sdpMLineIndex === 0 || sdpMLineIndex > 0 && transceiver.iceTransport !== pc.transceivers[0].iceTransport) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError', 'Can not add ICE candidate'));\n            }\n          } // update the remoteDescription.\n\n\n          var candidateString = candidate.candidate.trim();\n\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' + (cand.type ? candidateString : 'end-of-candidates') + '\\r\\n';\n          pc.remoteDescription.sdp = sections.join('');\n        } else {\n          return reject(makeError('OperationError', 'Can not add ICE candidate'));\n        }\n      }\n\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function () {\n    var promises = [];\n    this.transceivers.forEach(function (transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport', 'dtlsTransport'].forEach(function (method) {\n        if (transceiver[method]) {\n          promises.push(transceiver[method].getStats());\n        }\n      });\n    });\n\n    var fixStatsType = function fixStatsType(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n\n    return new Promise(function (resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function (res) {\n        res.forEach(function (result) {\n          Object.keys(result).forEach(function (id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        resolve(results);\n      });\n    });\n  }; // legacy callback shims. Should be moved to adapter.js some days.\n\n\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[0] === 'function' || typeof args[1] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, [arguments[2]]).then(function (description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function (error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[1] === 'function' || typeof args[2] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function (error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  }); // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n\n  ['getStats'].forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  return RTCPeerConnection;\n};","map":{"version":3,"sources":["/root/twilio-phone-client/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js"],"names":["SDPUtils","require","writeMediaSection","transceiver","caps","type","stream","dtlsRole","sdp","writeRtpDescription","kind","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","trackId","_initialTrackId","track","id","msid","sendEncodingParameters","ssrc","rtx","localCName","filterIceServers","iceServers","edgeVersion","hasTurn","JSON","parse","stringify","filter","server","urls","url","console","warn","isString","validTurn","indexOf","length","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","parseInt","i","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","name","toLowerCase","forEach","clockRate","numChannels","Math","min","push","rtcpFeedback","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","find","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","description","e","Error","module","exports","window","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","removeTrack","fireAddTrack","pc","receiver","streams","trackEvent","Event","setTimeout","_dispatchEvent","RTCPeerConnection","config","_eventTarget","document","createDocumentFragment","method","bind","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","localDescription","remoteDescription","iceConnectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","undefined","_isClosed","prototype","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","alreadyExists","s","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","getTracks","clonedStream","clone","idx","clonedTrack","addEventListener","enabled","sender","TypeError","t","stop","map","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","shift","Object","defineProperty","value","writable","bufferedCandidateEvents","bufferCandidates","end","keys","state","_gather","onlocalcandidate","removeEventListener","evt","sdpMid","cand","component","serializedCandidate","writeCandidate","assign","parseCandidate","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","Promise","reject","sessionpart","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","rejected","isRejected","isDatachannel","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","resolve","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","RTCRtpReceiver","getCapabilities","codec","isNewTrack","MediaStream","get","default","nativeTrack","sid","item","close","newState","states","closed","connecting","checking","connected","completed","disconnected","failed","new","createOffer","numAudioTracks","numVideoTracks","offerOptions","arguments","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","hasRtx","c","reducedSize","addIceCandidate","candidateString","trim","getStats","promises","fixStatsType","stat","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","results","Map","all","then","res","result","set","methods","nativeMethod","args","apply","error"],"mappings":"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","sourcesContent":["/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldÑ• are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this.localDescription = null;\n    this.remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // Ñ•dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateCompleteâ€¥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc.localDescription.sdp =\n          SDPUtils.getDescription(pc.localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc.remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n            'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc.remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].isDatachannel) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc.remoteDescription.sdp =\n              SDPUtils.getDescription(pc.remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.isDatachannel) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc.remoteDescription.sdp = sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function() {\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    var fixStatsType = function(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function(resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function(res) {\n        res.forEach(function(result) {\n          Object.keys(result).forEach(function(id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        resolve(results);\n      });\n    });\n  };\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"]},"metadata":{},"sourceType":"script"}