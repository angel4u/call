{"ast":null,"code":"import _taggedTemplateLiteral from \"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/root/twilio-phone-client/src/components/MsgList.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8,\n    _templateObject9,\n    _templateObject10;\n\nimport React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport styled from 'styled-components';\nimport { printTimestamp, formatBodyText, prettyDate } from '../helpers';\nimport Spinner from './Spinner';\n\nvar MsgList = /*#__PURE__*/function (_Component) {\n  _inherits(MsgList, _Component);\n\n  function MsgList(props) {\n    var _this;\n\n    _classCallCheck(this, MsgList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MsgList).call(this, props));\n\n    _this.attachScrollListener = function () {\n      if (_this.scrollAreaRef.current && !_this.state.scrollListenerAttached) {\n        _this.scrollAreaRef.current.addEventListener('scroll', _this.onScroll);\n\n        _this.setState({\n          scrollListenerAttached: true\n        });\n      }\n    };\n\n    _this.onScroll = function () {\n      /*\n       * this.scrollAreaRef.current.scrollTop - current position\n       * this.scrollAreaRef.current.scrollHeight - height of element's content (including overflows)\n       * this.scrollAreaRef.current.offsetHeight - height of element's viewport\n       */\n      if (_this.scrollAreaRef.current.scrollTop < 250 && _this.canScroll) {\n        _this.canScroll = false;\n\n        _this.props.fetchAnotherPage().then(function () {\n          _this.canScroll = true;\n        }).catch(function () {});\n      }\n    };\n\n    _this.canScroll = true;\n    _this.state = {\n      scrollListenerAttached: false\n    };\n    _this.messagesEndRef = React.createRef();\n    _this.scrollAreaRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(MsgList, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.scrollAreaRef.current && this.attachScrollListener) {\n        this.scrollAreaRef.current.removeEventListener('scroll', this.onScroll);\n        this.setState({\n          scrollListenerAttached: false\n        });\n      }\n    } // since newest messages are at the bottom, scroll there by default\n\n  }, {\n    key: \"scrollToBottom\",\n    value: function scrollToBottom() {\n      if (this.messagesEndRef.current) {\n        this.messagesEndRef.current.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.attachScrollListener();\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.attachScrollListener(); // scroll to the bottom on:\n\n      if ( // the 1st load\n      prevProps.messages === undefined && this.props.messages !== undefined || // or when new message was added (last messages are not the same)\n      prevProps.messages && this.props.messages && prevProps.messages[prevProps.messages.length - 1] !== this.props.messages[this.props.messages.length - 1]) {\n        this.scrollToBottom();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var lastDate = null;\n\n      if (this.props.selectedContact === 'new') {\n        return /*#__PURE__*/React.createElement(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 14\n          }\n        });\n      } else if (this.props.messages === undefined) {\n        return /*#__PURE__*/React.createElement(Container, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Spinner, {\n          text: \"Loading messages...\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Container, {\n          key: \"msgListCont\",\n          ref: this.scrollAreaRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(StyledReactTooltip, {\n          key: \"tooltip\",\n          place: \"left\",\n          effect: \"solid\",\n          multiline: true,\n          delayHide: 500,\n          delayShow: 500,\n          clickable: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(MsgCanvas, {\n          key: \"msgCanvas\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }, this.props.messages.map(function (msg) {\n          return [lastDate === prettyDate(msg.timestamp) ? null : /*#__PURE__*/React.createElement(Date, {\n            key: msg.timestamp,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }\n          }, lastDate = prettyDate(msg.timestamp)), /*#__PURE__*/React.createElement(MsgListItem, {\n            key: msg.sid,\n            author: msg.author,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Bubble, {\n            author: msg.author,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Header, {\n            key: \"header\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Author, {\n            key: \"author\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 23\n            }\n          }, msg.attributes.fromNumber), /*#__PURE__*/React.createElement(TimeStamp, {\n            key: \"timestamp\",\n            \"data-tip\": (msg.attributes.sid ? msg.attributes.sid + '<br />' : '') + (msg.attributes.fromNumber ? 'From: ' + msg.attributes.fromNumber + '<br />' : '') + (msg.attributes.toNumber ? 'To: ' + msg.attributes.toNumber + '<br />' : '') + (msg.attributes.dateCreated ? 'Date created: ' + msg.attributes.dateCreated + '<br />' : '') + (msg.attributes.numSegments ? 'Sent as ' + msg.attributes.numSegments + ' segment' + (msg.attributes.numSegments > 1 ? 's' : '') : ''),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 23\n            }\n          }, printTimestamp(msg.timestamp))), /*#__PURE__*/React.createElement(Body, {\n            key: \"body\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }\n          }, formatBodyText(msg.body))))];\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          ref: this.messagesEndRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return MsgList;\n}(Component);\n\nexport { MsgList as default };\nvar StyledReactTooltip = styled(ReactTooltip)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  &.type-dark {\\n    font-size: 11px;\\n    padding: 0.5rem 0.75rem;\\n    background-color: #565b73;\\n    color: #ffffff;\\n    > * {\\n      text-align: left;\\n    }\\n  }\\n  &.__react_component_tooltip.place-left::after {\\n    border-left: 6px solid #565b73 !important;\\n  }\\n  &.__react_component_tooltip.place-right::after {\\n    border-right: 6px solid #565b73 !important;\\n  }\\n  &.__react_component_tooltip.place-top::after {\\n    border-top: 6px solid #565b73 !important;\\n  }\\n  &.__react_component_tooltip.place-bottom::after {\\n    border-bottom: 6px solid #565b73 !important;\\n  }\\n\"])));\nvar Container = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: auto;\\n  flex-shrink: 1;\\n  -webkit-box-flex: 1;\\n  flex-grow: 1;\\n  overflow-y: auto;\\n  padding-left: 12px;\\n  padding-right: 12px;\\n  position: relative;\\n  overflow-x: hidden;\\n  flex-flow: row wrap;\\n  align-items: stretch;\\n  height: 100vh;\\n\"])));\nvar MsgCanvas = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  width: 100vw;\\n\"])));\nvar MsgListItem = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  margin-bottom: 8px;\\n  margin-top: 8px;\\n  display: flex;\\n  position: relative;\\n  flex: 1 1 100%;\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  max-width: 440px;\\n  min-width: 100px;\\n  overflow-x: hidden;\\n  \", \"\\n\"])), function (props) {\n  return props.author === 'them' ? // them - grey\n  \"\\n    align-self: left;\\n    margin-left: 0px;\\n    margin-right: 44px;\\n    \" : // us - accent color\n  \"\\n    align-self: right;\\n    margin-left: 44px;\\n    margin-right: 0px;\\n    \";\n});\nvar Bubble = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  padding: 5px 12px 8px 12px;\\n  margin-left: 0px;\\n  position: relative;\\n  overflow-x: hidden;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  -webkit-box-flex: 1;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  flex-direction: column;\\n  \", \"\\n  border-radius: 4px;\\n\"])), function (props) {\n  return props.author === 'them' ? // them - grey\n  \"\\n    background: #ECEDF1;\\n    color: rgb(34, 34, 34);\\n    margin-right: auto;\\n    \" : // us - blue\n  \"\\n    background: \".concat(process.env.REACT_APP_ACCENT_COLOR, \";\\n    color: #FFFFFF;\\n    margin-left: auto;\\n    \");\n});\nvar Header = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  -webkit-box-pack: justify;\\n  justify-content: space-between;\\n  display: flex;\\n  flex-wrap: nowrap;\\n  -webkit-box-flex: 1;\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  flex-direction: row;\\n\"])));\nvar Author = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  font-size: 10px;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  margin-right: 8px;\\n  font-weight: bold;\\n  overflow: hidden;\\n  flex: 0 1 auto;\\n\"])));\nvar TimeStamp = styled.div(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  font-size: 10px;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  flex: 0 0 auto;\\n\"])));\nvar Body = styled.div(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral([\"\\n  margin-top: 3px;\\n  margin-bottom: 0px;\\n  font-size: 12px;\\n  line-height: 1.54;\\n  overflow-wrap: break-word;\\n\"])));\nvar Date = styled.div(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  font-size: 12px;\\n  color: #565b73;\\n  padding-top: 8px;\\n\"])));","map":{"version":3,"sources":["/root/twilio-phone-client/src/components/MsgList.js"],"names":["React","Component","ReactTooltip","styled","printTimestamp","formatBodyText","prettyDate","Spinner","MsgList","props","attachScrollListener","scrollAreaRef","current","state","scrollListenerAttached","addEventListener","onScroll","setState","scrollTop","canScroll","fetchAnotherPage","then","catch","messagesEndRef","createRef","removeEventListener","scrollIntoView","scrollToBottom","prevProps","messages","undefined","length","lastDate","selectedContact","map","msg","timestamp","sid","author","attributes","fromNumber","toNumber","dateCreated","numSegments","body","StyledReactTooltip","Container","div","MsgCanvas","MsgListItem","Bubble","process","env","REACT_APP_ACCENT_COLOR","Header","Author","TimeStamp","Body","Date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport styled from 'styled-components';\nimport { printTimestamp, formatBodyText, prettyDate } from '../helpers';\nimport Spinner from './Spinner';\n\nexport default class MsgList extends Component {\n  constructor(props) {\n    super(props);\n    this.canScroll = true;\n    this.state = {\n      scrollListenerAttached: false\n    };\n    this.messagesEndRef = React.createRef();\n    this.scrollAreaRef = React.createRef();\n  }\n\n  componentWillUnmount() {\n    if (this.scrollAreaRef.current && this.attachScrollListener) {\n      this.scrollAreaRef.current.removeEventListener('scroll', this.onScroll);\n      this.setState({ scrollListenerAttached: false });\n    }\n  }\n\n  // since newest messages are at the bottom, scroll there by default\n  scrollToBottom() {\n    if (this.messagesEndRef.current) {\n      this.messagesEndRef.current.scrollIntoView();\n    }\n  }\n\n  attachScrollListener = () => {\n    if (this.scrollAreaRef.current && !this.state.scrollListenerAttached) {\n      this.scrollAreaRef.current.addEventListener('scroll', this.onScroll);\n      this.setState({ scrollListenerAttached: true });\n    }\n  };\n\n  onScroll = () => {\n    /*\n     * this.scrollAreaRef.current.scrollTop - current position\n     * this.scrollAreaRef.current.scrollHeight - height of element's content (including overflows)\n     * this.scrollAreaRef.current.offsetHeight - height of element's viewport\n     */\n    if (this.scrollAreaRef.current.scrollTop < 250 && this.canScroll) {\n      this.canScroll = false;\n      this.props\n        .fetchAnotherPage()\n        .then(() => {\n          this.canScroll = true;\n        })\n        .catch(() => {});\n    }\n  };\n\n  componentDidMount() {\n    this.attachScrollListener();\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.attachScrollListener();\n    // scroll to the bottom on:\n    if (\n      // the 1st load\n      (prevProps.messages === undefined && this.props.messages !== undefined) ||\n      // or when new message was added (last messages are not the same)\n      (prevProps.messages &&\n        this.props.messages &&\n        prevProps.messages[prevProps.messages.length - 1] !==\n          this.props.messages[this.props.messages.length - 1])\n    ) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    let lastDate = null;\n    if (this.props.selectedContact === 'new') {\n      return <Container></Container>;\n    } else if (this.props.messages === undefined) {\n      return (\n        <Container>\n          <Spinner text=\"Loading messages...\" />\n        </Container>\n      );\n    } else {\n      return (\n        <Container key=\"msgListCont\" ref={this.scrollAreaRef}>\n          <StyledReactTooltip\n            key=\"tooltip\"\n            place=\"left\"\n            effect=\"solid\"\n            multiline={true}\n            delayHide={500}\n            delayShow={500}\n            clickable={true}\n          />\n          <MsgCanvas key=\"msgCanvas\">\n            {this.props.messages.map((msg) => {\n              return [\n                lastDate === prettyDate(msg.timestamp) ? null : (\n                  <Date key={msg.timestamp}>\n                    {(lastDate = prettyDate(msg.timestamp))}\n                  </Date>\n                ),\n                <MsgListItem key={msg.sid} author={msg.author}>\n                  <Bubble author={msg.author}>\n                    <Header key=\"header\">\n                      <Author key=\"author\">{msg.attributes.fromNumber}</Author>\n                      <TimeStamp\n                        key=\"timestamp\"\n                        data-tip={\n                          (msg.attributes.sid\n                            ? msg.attributes.sid + '<br />'\n                            : '') +\n                          (msg.attributes.fromNumber\n                            ? 'From: ' + msg.attributes.fromNumber + '<br />'\n                            : '') +\n                          (msg.attributes.toNumber\n                            ? 'To: ' + msg.attributes.toNumber + '<br />'\n                            : '') +\n                          (msg.attributes.dateCreated\n                            ? 'Date created: ' +\n                              msg.attributes.dateCreated +\n                              '<br />'\n                            : '') +\n                          (msg.attributes.numSegments\n                            ? 'Sent as ' +\n                              msg.attributes.numSegments +\n                              ' segment' +\n                              (msg.attributes.numSegments > 1 ? 's' : '')\n                            : '')\n                        }\n                      >\n                        {printTimestamp(msg.timestamp)}\n                      </TimeStamp>\n                    </Header>\n                    <Body key=\"body\">{formatBodyText(msg.body)}</Body>\n                  </Bubble>\n                </MsgListItem>\n              ];\n            })}\n            <div ref={this.messagesEndRef} />\n          </MsgCanvas>\n        </Container>\n      );\n    }\n  }\n}\n\nconst StyledReactTooltip = styled(ReactTooltip)`\n  &.type-dark {\n    font-size: 11px;\n    padding: 0.5rem 0.75rem;\n    background-color: #565b73;\n    color: #ffffff;\n    > * {\n      text-align: left;\n    }\n  }\n  &.__react_component_tooltip.place-left::after {\n    border-left: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-right::after {\n    border-right: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-top::after {\n    border-top: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-bottom::after {\n    border-bottom: 6px solid #565b73 !important;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  flex-shrink: 1;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  overflow-y: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  position: relative;\n  overflow-x: hidden;\n  flex-flow: row wrap;\n  align-items: stretch;\n  height: 100vh;\n`;\n\nconst MsgCanvas = styled.div`\n  width: 100vw;\n`;\n\nconst MsgListItem = styled.div`\n  flex-direction: column;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  display: flex;\n  position: relative;\n  flex: 1 1 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  max-width: 440px;\n  min-width: 100px;\n  overflow-x: hidden;\n  ${(props) =>\n    props.author === 'them'\n      ? // them - grey\n        `\n    align-self: left;\n    margin-left: 0px;\n    margin-right: 44px;\n    `\n      : // us - accent color\n        `\n    align-self: right;\n    margin-left: 44px;\n    margin-right: 0px;\n    `}\n`;\n\nconst Bubble = styled.div`\n  padding: 5px 12px 8px 12px;\n  margin-left: 0px;\n  position: relative;\n  overflow-x: hidden;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: column;\n  ${(props) =>\n    props.author === 'them'\n      ? // them - grey\n        `\n    background: #ECEDF1;\n    color: rgb(34, 34, 34);\n    margin-right: auto;\n    `\n      : // us - blue\n        `\n    background: ${process.env.REACT_APP_ACCENT_COLOR};\n    color: #FFFFFF;\n    margin-left: auto;\n    `}\n  border-radius: 4px;\n`;\n\nconst Header = styled.div`\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: row;\n`;\n\nconst Author = styled.div`\n  font-size: 10px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-right: 8px;\n  font-weight: bold;\n  overflow: hidden;\n  flex: 0 1 auto;\n`;\n\nconst TimeStamp = styled.div`\n  font-size: 10px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  flex: 0 0 auto;\n`;\n\nconst Body = styled.div`\n  margin-top: 3px;\n  margin-bottom: 0px;\n  font-size: 12px;\n  line-height: 1.54;\n  overflow-wrap: break-word;\n`;\n\nconst Date = styled.div`\n  text-align: center;\n  font-size: 12px;\n  color: #565b73;\n  padding-top: 8px;\n`;\n"]},"metadata":{},"sourceType":"module"}