{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nfunction EventTarget() {\n  Object.defineProperties(this, {\n    _eventEmitter: {\n      value: new EventEmitter()\n    },\n    _handlers: {\n      value: {}\n    }\n  });\n}\n\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  return this._eventEmitter.emit(event.type, event);\n};\n\nEventTarget.prototype.addEventListener = function addEventListener() {\n  var _a;\n\n  return (_a = this._eventEmitter).addListener.apply(_a, arguments);\n};\n\nEventTarget.prototype.removeEventListener = function removeEventListener() {\n  var _a;\n\n  return (_a = this._eventEmitter).removeListener.apply(_a, arguments);\n};\n\nEventTarget.prototype._defineEventHandler = function _defineEventHandler(eventName) {\n  var self = this;\n  Object.defineProperty(this, \"on\" + eventName, {\n    get: function () {\n      return self._handlers[eventName];\n    },\n    set: function (newHandler) {\n      var oldHandler = self._handlers[eventName];\n\n      if (oldHandler && (typeof newHandler === 'function' || typeof newHandler === 'undefined' || newHandler === null)) {\n        self._handlers[eventName] = null;\n        self.removeEventListener(eventName, oldHandler);\n      }\n\n      if (typeof newHandler === 'function') {\n        self._handlers[eventName] = newHandler;\n        self.addEventListener(eventName, newHandler);\n      }\n    }\n  });\n};\n\nmodule.exports = EventTarget;","map":{"version":3,"sources":["../../../lib/twilio/shims/eventtarget.js"],"names":[],"mappings":"AAAA,IAAM,YAAY,GAAG,OAAO,CAAC,QAAD,CAAP,CAAkB,YAAvC;;AAEA,SAAS,WAAT,GAAoB;AAClB,EAAA,MAAM,CAAC,gBAAP,CAAwB,IAAxB,EAA8B;AAC5B,IAAA,aAAa,EAAE;AACb,MAAA,KAAK,EAAE,IAAI,YAAJ;AADM,KADa;AAI5B,IAAA,SAAS,EAAE;AACT,MAAA,KAAK,EAAE;AADE;AAJiB,GAA9B;AAQD;;AAED,WAAW,CAAC,SAAZ,CAAsB,aAAtB,GAAsC,SAAS,aAAT,CAAuB,KAAvB,EAA4B;AAChE,SAAO,KAAK,aAAL,CAAmB,IAAnB,CAAwB,KAAK,CAAC,IAA9B,EAAoC,KAApC,CAAP;AACD,CAFD;;AAIA,WAAW,CAAC,SAAZ,CAAsB,gBAAtB,GAAyC,SAAS,gBAAT,GAAyB;;;AAChE,SAAO,CAAA,EAAA,GAAA,KAAK,aAAL,EAAmB,WAAnB,CAA8B,KAA9B,CAA8B,EAA9B,EAAkC,SAAlC,CAAP;AACD,CAFD;;AAIA,WAAW,CAAC,SAAZ,CAAsB,mBAAtB,GAA4C,SAAS,mBAAT,GAA4B;;;AACtE,SAAO,CAAA,EAAA,GAAA,KAAK,aAAL,EAAmB,cAAnB,CAAiC,KAAjC,CAAiC,EAAjC,EAAqC,SAArC,CAAP;AACD,CAFD;;AAIA,WAAW,CAAC,SAAZ,CAAsB,mBAAtB,GAA4C,SAAS,mBAAT,CAA6B,SAA7B,EAAsC;AAChF,MAAM,IAAI,GAAG,IAAb;AACA,EAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,OAAK,SAAjC,EAA8C;AAC5C,IAAA,GAAG,EAAA,YAAA;AACD,aAAO,IAAI,CAAC,SAAL,CAAe,SAAf,CAAP;AACD,KAH2C;AAI5C,IAAA,GAAG,EAAA,UAAC,UAAD,EAAW;AACZ,UAAM,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe,SAAf,CAAnB;;AAEA,UAAI,UAAU,KACR,OAAO,UAAP,KAAsB,UAAtB,IACC,OAAO,UAAP,KAAsB,WADvB,IAEC,UAAU,KAAK,IAHR,CAAd,EAG6B;AAC3B,QAAA,IAAI,CAAC,SAAL,CAAe,SAAf,IAA4B,IAA5B;AACA,QAAA,IAAI,CAAC,mBAAL,CAAyB,SAAzB,EAAoC,UAApC;AACD;;AAED,UAAI,OAAO,UAAP,KAAsB,UAA1B,EAAsC;AACpC,QAAA,IAAI,CAAC,SAAL,CAAe,SAAf,IAA4B,UAA5B;AACA,QAAA,IAAI,CAAC,gBAAL,CAAsB,SAAtB,EAAiC,UAAjC;AACD;AACF;AAnB2C,GAA9C;AAqBD,CAvBD;;AAyBA,MAAM,CAAC,OAAP,GAAiB,WAAjB","sourcesContent":["const EventEmitter = require('events').EventEmitter;\n\nfunction EventTarget() {\n  Object.defineProperties(this, {\n    _eventEmitter: {\n      value: new EventEmitter()\n    },\n    _handlers: {\n      value: { }\n    },\n  });\n}\n\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  return this._eventEmitter.emit(event.type, event);\n};\n\nEventTarget.prototype.addEventListener = function addEventListener() {\n  return this._eventEmitter.addListener(...arguments);\n};\n\nEventTarget.prototype.removeEventListener = function removeEventListener() {\n  return this._eventEmitter.removeListener(...arguments);\n};\n\nEventTarget.prototype._defineEventHandler = function _defineEventHandler(eventName) {\n  const self = this;\n  Object.defineProperty(this, `on${eventName}`, {\n    get() {\n      return self._handlers[eventName];\n    },\n    set(newHandler) {\n      const oldHandler = self._handlers[eventName];\n\n      if (oldHandler\n        && (typeof newHandler === 'function'\n          || typeof newHandler === 'undefined'\n          || newHandler === null)) {\n        self._handlers[eventName] = null;\n        self.removeEventListener(eventName, oldHandler);\n      }\n\n      if (typeof newHandler === 'function') {\n        self._handlers[eventName] = newHandler;\n        self.addEventListener(eventName, newHandler);\n      }\n    }\n  });\n};\n\nmodule.exports = EventTarget;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}