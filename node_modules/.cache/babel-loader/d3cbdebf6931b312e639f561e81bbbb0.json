{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * {@link RTCIceCandidate} parses an ICE candidate gathered by the browser\n * and returns a IceCandidate object\n */\n\nvar IceCandidate =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param iceCandidate RTCIceCandidate coming from the browser\n   */\n  function IceCandidate(iceCandidate, isRemote) {\n    if (isRemote === void 0) {\n      isRemote = false;\n    }\n    /**\n     * Whether this is deleted from the list of candidate gathered\n     */\n\n\n    this.deleted = false;\n    var cost;\n    var parts = iceCandidate.candidate.split('network-cost ');\n\n    if (parts[1]) {\n      cost = parseInt(parts[1], 10);\n    }\n\n    this.candidateType = iceCandidate.type;\n    this.ip = iceCandidate.ip || iceCandidate.address;\n    this.isRemote = isRemote;\n    this.networkCost = cost;\n    this.port = iceCandidate.port;\n    this.priority = iceCandidate.priority;\n    this.protocol = iceCandidate.protocol;\n    this.relatedAddress = iceCandidate.relatedAddress;\n    this.relatedPort = iceCandidate.relatedPort;\n    this.tcpType = iceCandidate.tcpType;\n    this.transportId = iceCandidate.sdpMid;\n  }\n  /**\n   * Get the payload object for insights\n   */\n\n\n  IceCandidate.prototype.toPayload = function () {\n    return {\n      'candidate_type': this.candidateType,\n      'deleted': this.deleted,\n      'ip': this.ip,\n      'is_remote': this.isRemote,\n      'network-cost': this.networkCost,\n      'port': this.port,\n      'priority': this.priority,\n      'protocol': this.protocol,\n      'related_address': this.relatedAddress,\n      'related_port': this.relatedPort,\n      'tcp_type': this.tcpType,\n      'transport_id': this.transportId\n    };\n  };\n\n  return IceCandidate;\n}();\n\nexports.IceCandidate = IceCandidate;","map":{"version":3,"sources":["../../../lib/twilio/rtc/icecandidate.ts"],"names":[],"mappings":";AAAA;;;;AAIG;;;;;AA4BH;;;AAGG;;AACH,IAAA,YAAA;AAAA;AAAA,YAAA;AAiEE;;;AAGG;AACH,WAAA,YAAA,CAAY,YAAZ,EAA2C,QAA3C,EAAoE;AAAzB,QAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,QAAA,GAAA,KAAA;AAAyB;AA9DpE;;AAEG;;;AACK,SAAA,OAAA,GAAmB,KAAnB;AA4DN,QAAI,IAAJ;AACA,QAAM,KAAK,GAAG,YAAY,CAAC,SAAb,CAAuB,KAAvB,CAA6B,eAA7B,CAAd;;AAEA,QAAI,KAAK,CAAC,CAAD,CAAT,EAAc;AACZ,MAAA,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAf;AACD;;AAED,SAAK,aAAL,GAAqB,YAAY,CAAC,IAAlC;AACA,SAAK,EAAL,GAAU,YAAY,CAAC,EAAb,IAAmB,YAAY,CAAC,OAA1C;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,WAAL,GAAmB,IAAnB;AACA,SAAK,IAAL,GAAY,YAAY,CAAC,IAAzB;AACA,SAAK,QAAL,GAAgB,YAAY,CAAC,QAA7B;AACA,SAAK,QAAL,GAAgB,YAAY,CAAC,QAA7B;AACA,SAAK,cAAL,GAAsB,YAAY,CAAC,cAAnC;AACA,SAAK,WAAL,GAAmB,YAAY,CAAC,WAAhC;AACA,SAAK,OAAL,GAAe,YAAY,CAAC,OAA5B;AACA,SAAK,WAAL,GAAmB,YAAY,CAAC,MAAhC;AACD;AAED;;AAEG;;;AACH,EAAA,YAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,WAAO;AACL,wBAAkB,KAAK,aADlB;AAEL,iBAAW,KAAK,OAFX;AAGL,YAAM,KAAK,EAHN;AAIL,mBAAa,KAAK,QAJb;AAKL,sBAAgB,KAAK,WALhB;AAML,cAAQ,KAAK,IANR;AAOL,kBAAY,KAAK,QAPZ;AAQL,kBAAY,KAAK,QARZ;AASL,yBAAmB,KAAK,cATnB;AAUL,sBAAgB,KAAK,WAVhB;AAWL,kBAAY,KAAK,OAXZ;AAYL,sBAAgB,KAAK;AAZhB,KAAP;AAcD,GAfD;;AAgBF,SAAA,YAAA;AAAC,CA7GD,EAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA","sourcesContent":["/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\n\n/**\n * Payload object we send to insights\n * @private\n */\ninterface RTCIceCandidatePayload {\n  candidate_type: string;\n  deleted: boolean;\n  ip: string;\n  is_remote: boolean;\n  'network-cost': number | undefined;\n  port: number;\n  priority: number;\n  protocol: string;\n  related_address: string;\n  related_port: number;\n  tcp_type: string;\n  transport_id: string;\n}\n\n/**\n * Represents an ICE candidate coming from the browser\n * https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate\n * @private\n */\nexport type RTCIceCandidate = any;\n\n/**\n * {@link RTCIceCandidate} parses an ICE candidate gathered by the browser\n * and returns a IceCandidate object\n */\nexport class IceCandidate {\n  /**\n   * Candidate's type\n   * https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateType\n   */\n  private candidateType: string;\n\n  /**\n   * Whether this is deleted from the list of candidate gathered\n   */\n  private deleted: boolean = false;\n\n  /**\n   * Candidate's IP address\n   */\n  private ip: string;\n\n  /**\n   * Whether this is a remote candidate\n   */\n  private isRemote: boolean;\n\n  /**\n   * A number from 0 to 999 indicating the cost of network\n   * where larger values indicate a stronger preference for not using that network\n   */\n  private networkCost: number | undefined;\n\n  /**\n   * Candidate's port number\n   */\n  private port: number;\n\n  /**\n   * A number indicating candidate's priority\n   */\n  private priority: number;\n\n  /**\n   * Candidate's protocol - udp or tcp\n   */\n  private protocol: string;\n\n  /**\n   * The host candidate's IP address if the candidate is derived from another candidate,\n   */\n  private relatedAddress: string;\n\n  /**\n   * The port number of the candidate from which this\n   * candidate is derived, such as a relay or reflexive candidate.\n   */\n  private relatedPort: number;\n\n  /**\n   * Represents the type of TCP candidate.\n   */\n  private tcpType: string;\n\n  /**\n   * Also known as sdpMid, specifying the candidate's media stream identification tag which uniquely\n   * identifies the media stream within the component with which the candidate is associated\n   */\n  private transportId: string;\n\n  /**\n   * @constructor\n   * @param iceCandidate RTCIceCandidate coming from the browser\n   */\n  constructor(iceCandidate: RTCIceCandidate, isRemote: boolean = false) {\n    let cost;\n    const parts = iceCandidate.candidate.split('network-cost ');\n\n    if (parts[1]) {\n      cost = parseInt(parts[1], 10);\n    }\n\n    this.candidateType = iceCandidate.type;\n    this.ip = iceCandidate.ip || iceCandidate.address;\n    this.isRemote = isRemote;\n    this.networkCost = cost;\n    this.port = iceCandidate.port;\n    this.priority = iceCandidate.priority;\n    this.protocol = iceCandidate.protocol;\n    this.relatedAddress = iceCandidate.relatedAddress;\n    this.relatedPort = iceCandidate.relatedPort;\n    this.tcpType = iceCandidate.tcpType;\n    this.transportId = iceCandidate.sdpMid;\n  }\n\n  /**\n   * Get the payload object for insights\n   */\n  toPayload(): RTCIceCandidatePayload {\n    return {\n      'candidate_type': this.candidateType,\n      'deleted': this.deleted,\n      'ip': this.ip,\n      'is_remote': this.isRemote,\n      'network-cost': this.networkCost,\n      'port': this.port,\n      'priority': this.priority,\n      'protocol': this.protocol,\n      'related_address': this.relatedAddress,\n      'related_port': this.relatedPort,\n      'tcp_type': this.tcpType,\n      'transport_id': this.transportId,\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}