{"ast":null,"code":"var _jsxFileName = \"/root/twilio-phone-client/src/components/AuthForm.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FullScreen } from './CommonComponents';\nimport chroma from 'chroma-js';\nconst accent = process.env.REACT_APP_ACCENT_COLOR;\nconst accent_light = chroma(process.env.REACT_APP_ACCENT_COLOR).brighten().hex();\nexport default class AuthForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      const value = event.target.checked;\n      this.setState({\n        remember: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const secret = this.state.secret;\n      this.props.setSecret(secret);\n\n      if (this.state.remember) {\n        localStorage.setItem('secret', secret);\n      }\n    };\n\n    this.updateSecret = event => {\n      this.setState({\n        secret: event.target.value\n      });\n    };\n\n    this.state = {\n      remember: false,\n      secret: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(FullScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Enter your secret\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"action\",\n      defaultValue: \"login\",\n      autoComplete: \"off\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Password, {\n      type: \"password\",\n      name: \"secret\",\n      autoComplete: \"current-password\",\n      value: this.state.secret,\n      onChange: this.updateSecret,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }), this.props.errMsg && /*#__PURE__*/React.createElement(LabelError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"(\", this.props.errMsg, \")\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BtnSubmit, {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Unlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(LabelSmall, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      name: \"remember\",\n      type: \"checkbox\",\n      checked: this.state.remember,\n      onChange: this.handleCheckboxChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), \"Remember on this device\")));\n  }\n\n}\n\nconst SvgUnlock = props => /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n  viewBox: \"0 0 200 200\",\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  strokeLinejoin: \"round\",\n  strokeMiterlimit: 2\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M162.5 100c6.9 0 12.5 5.6 12.5 12.5v75c0 6.9-5.6 12.5-12.5 12.5h-125c-6.9 0-12.5-5.6-12.5-12.5v-75c0-6.9 5.6-12.5 12.5-12.5h4.167V58.333C41.667 26.175 67.842 0 100 0s58.333 26.175 58.333 58.333c0 4.559-3.775 8.334-8.333 8.334h-8.333c-4.559 0-8.334-3.775-8.334-8.334C133.333 39.975 118.358 25 100 25c-18.358 0-33.333 14.975-33.333 33.333V100H162.5z\",\n  fill: \"currentColor\",\n  fillRule: \"nonzero\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }\n}));\n\nconst Unlock = styled(SvgUnlock)`\n  height: 6vmin;\n  width: 6vmin;\n  @media (min-width: 400px) {\n    height: 24px;\n    width: 24px;\n  }\n`;\nconst Password = styled.input`\n  outline: none;\n  height: 10vmin;\n  width: 100vw;\n  font-size: 5vmin;\n  text-align: center;\n  color: #565b73;\n  padding: 0.5vmin 3vmin 0.5vmin 3vmin;\n  @media (min-width: 400px) {\n    height: 40px;\n    width: 400px;\n    font-size: 20px;\n    padding: 2px 12px 2px 12px;\n  }\n  border: 0;\n  background: rgb(236, 237, 241);\n`;\nconst BtnSubmit = styled.button`\n  height: 12vmin;\n  width: 12vmin;\n  color: #565b73;\n  padding: 0;\n  border-width: initial;\n  border-style: none;\n  border-color: initial;\n  border-image: initial;\n  outline: none;\n  border-radius: 50px;\n  background: rgb(236, 237, 241);\n  cursor: pointer;\n  @media (min-width: 400px) {\n    height: 48px;\n    width: 48px;\n  }\n  &:hover {\n    background: ${accent};\n    color: #ffffff;\n  }\n`;\nconst Label = styled.label`\n  color: #565b73;\n  font-size: 5vmin;\n  @media (min-width: 400px) {\n    font-size: 20px;\n  }\n`;\nconst LabelSmall = styled(Label)`\n  font-size: 4vmin;\n  @media (min-width: 400px) {\n    font-size: 16px;\n  }\n`;\nconst LabelError = styled(LabelSmall)`\n  color: ${process.env.REACT_APP_ACCENT_COLOR};\n`;\nconst HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  // Hide checkbox visually but remain accessible to screen readers.\n  // Source: https://polished.js.org/docs/#hidevisually\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 4px;\n`;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 4vmin;\n  height: 4vmin;\n  margin-right: 1.5vmin;\n  background: ${props => props.checked ? accent : 'rgb(236, 237, 241)'};\n  border-radius: 3px;\n  transition: all 150ms;\n  @media (min-width: 400px) {\n    width: 16px;\n    height: 16px;\n    margin-right: 6px;\n  }\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 2px ${accent_light};\n  }\n  ${Icon} {\n    visibility: ${props => props.checked ? 'visible' : 'hidden'};\n  }\n`;\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Checkbox = ({\n  checked,\n  ...props\n}) => /*#__PURE__*/React.createElement(CheckboxContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(HiddenCheckbox, Object.assign({\n  checked: checked\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }\n})), /*#__PURE__*/React.createElement(StyledCheckbox, {\n  checked: checked,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  viewBox: \"0 0 24 24\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  points: \"20 6 9 17 4 12\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }\n}))));","map":{"version":3,"sources":["/root/twilio-phone-client/src/components/AuthForm.js"],"names":["React","Component","styled","FullScreen","chroma","accent","process","env","REACT_APP_ACCENT_COLOR","accent_light","brighten","hex","AuthForm","constructor","props","handleCheckboxChange","event","value","target","checked","setState","remember","handleSubmit","preventDefault","secret","state","setSecret","localStorage","setItem","updateSecret","render","display","errMsg","SvgUnlock","Unlock","Password","input","BtnSubmit","button","Label","label","LabelSmall","LabelError","HiddenCheckbox","attrs","type","Icon","svg","StyledCheckbox","div","CheckboxContainer","Checkbox"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FullScreen } from './CommonComponents';\nimport chroma from 'chroma-js';\nconst accent = process.env.REACT_APP_ACCENT_COLOR;\nconst accent_light = chroma(process.env.REACT_APP_ACCENT_COLOR)\n  .brighten()\n  .hex();\n\nexport default class AuthForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { remember: false, secret: '' };\n  }\n\n  handleCheckboxChange = (event) => {\n    const value = event.target.checked;\n    this.setState({\n      remember: value\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const secret = this.state.secret;\n    this.props.setSecret(secret);\n    if (this.state.remember) {\n      localStorage.setItem('secret', secret);\n    }\n  };\n\n  updateSecret = (event) => {\n    this.setState({\n      secret: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <FullScreen>\n        <form>\n          <Label>\n            <p>Enter your secret</p>\n            <p>\n              <input\n                type=\"text\"\n                name=\"action\"\n                defaultValue=\"login\"\n                autoComplete=\"off\"\n                style={{ display: 'none' }}\n              />\n              <Password\n                type=\"password\"\n                name=\"secret\"\n                autoComplete=\"current-password\"\n                value={this.state.secret}\n                onChange={this.updateSecret}\n              />\n              {this.props.errMsg && (\n                <LabelError>({this.props.errMsg})</LabelError>\n              )}\n            </p>\n            <p>\n              <BtnSubmit onClick={this.handleSubmit}>\n                <Unlock />\n              </BtnSubmit>\n            </p>\n          </Label>\n          <LabelSmall>\n            <Checkbox\n              name=\"remember\"\n              type=\"checkbox\"\n              checked={this.state.remember}\n              onChange={this.handleCheckboxChange}\n            />\n            Remember on this device\n          </LabelSmall>\n        </form>\n      </FullScreen>\n    );\n  }\n}\n\nconst SvgUnlock = (props) => (\n  <svg\n    viewBox=\"0 0 200 200\"\n    fillRule=\"evenodd\"\n    clipRule=\"evenodd\"\n    strokeLinejoin=\"round\"\n    strokeMiterlimit={2}\n    {...props}\n  >\n    <path\n      d=\"M162.5 100c6.9 0 12.5 5.6 12.5 12.5v75c0 6.9-5.6 12.5-12.5 12.5h-125c-6.9 0-12.5-5.6-12.5-12.5v-75c0-6.9 5.6-12.5 12.5-12.5h4.167V58.333C41.667 26.175 67.842 0 100 0s58.333 26.175 58.333 58.333c0 4.559-3.775 8.334-8.333 8.334h-8.333c-4.559 0-8.334-3.775-8.334-8.334C133.333 39.975 118.358 25 100 25c-18.358 0-33.333 14.975-33.333 33.333V100H162.5z\"\n      fill=\"currentColor\"\n      fillRule=\"nonzero\"\n    />\n  </svg>\n);\n\nconst Unlock = styled(SvgUnlock)`\n  height: 6vmin;\n  width: 6vmin;\n  @media (min-width: 400px) {\n    height: 24px;\n    width: 24px;\n  }\n`;\n\nconst Password = styled.input`\n  outline: none;\n  height: 10vmin;\n  width: 100vw;\n  font-size: 5vmin;\n  text-align: center;\n  color: #565b73;\n  padding: 0.5vmin 3vmin 0.5vmin 3vmin;\n  @media (min-width: 400px) {\n    height: 40px;\n    width: 400px;\n    font-size: 20px;\n    padding: 2px 12px 2px 12px;\n  }\n  border: 0;\n  background: rgb(236, 237, 241);\n`;\n\nconst BtnSubmit = styled.button`\n  height: 12vmin;\n  width: 12vmin;\n  color: #565b73;\n  padding: 0;\n  border-width: initial;\n  border-style: none;\n  border-color: initial;\n  border-image: initial;\n  outline: none;\n  border-radius: 50px;\n  background: rgb(236, 237, 241);\n  cursor: pointer;\n  @media (min-width: 400px) {\n    height: 48px;\n    width: 48px;\n  }\n  &:hover {\n    background: ${accent};\n    color: #ffffff;\n  }\n`;\n\nconst Label = styled.label`\n  color: #565b73;\n  font-size: 5vmin;\n  @media (min-width: 400px) {\n    font-size: 20px;\n  }\n`;\n\nconst LabelSmall = styled(Label)`\n  font-size: 4vmin;\n  @media (min-width: 400px) {\n    font-size: 16px;\n  }\n`;\n\nconst LabelError = styled(LabelSmall)`\n  color: ${process.env.REACT_APP_ACCENT_COLOR};\n`;\n\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\n  // Hide checkbox visually but remain accessible to screen readers.\n  // Source: https://polished.js.org/docs/#hidevisually\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 4px;\n`;\n\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 4vmin;\n  height: 4vmin;\n  margin-right: 1.5vmin;\n  background: ${(props) => (props.checked ? accent : 'rgb(236, 237, 241)')};\n  border-radius: 3px;\n  transition: all 150ms;\n  @media (min-width: 400px) {\n    width: 16px;\n    height: 16px;\n    margin-right: 6px;\n  }\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 2px ${accent_light};\n  }\n  ${Icon} {\n    visibility: ${(props) => (props.checked ? 'visible' : 'hidden')};\n  }\n`;\n\nconst CheckboxContainer = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\n\nconst Checkbox = ({ checked, ...props }) => (\n  <CheckboxContainer>\n    <HiddenCheckbox checked={checked} {...props} />\n    <StyledCheckbox checked={checked}>\n      <Icon viewBox=\"0 0 24 24\">\n        <polyline points=\"20 6 9 17 4 12\" />\n      </Icon>\n    </StyledCheckbox>\n  </CheckboxContainer>\n);\n"]},"metadata":{},"sourceType":"module"}