{"ast":null,"code":"var _jsxFileName = \"/root/twilio-phone-client/src/components/ChannelSwitcher.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SvgPhone } from './CallDialpadComponents';\nimport { Badge } from './CommonComponents';\n\nfunction ChannelSwitcher(props) {\n  let msgUnreadsTotal = 0;\n\n  for (const contact in props.msgUnreadsCache) {\n    msgUnreadsTotal += props.msgUnreadsCache[contact];\n  }\n\n  return /*#__PURE__*/React.createElement(TabsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    selected: props.selectedChannel === 'sms' ? true : false,\n    onClick: props.setChannel.bind(null, 'sms'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, msgUnreadsTotal > 0 && /*#__PURE__*/React.createElement(Badge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 37\n    }\n  }, msgUnreadsTotal), /*#__PURE__*/React.createElement(Channel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"sms\")), /*#__PURE__*/React.createElement(StateIndicator, {\n    selected: props.selectedChannel === 'sms' ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TabHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    selected: props.selectedChannel === 'call' ? true : false,\n    onClick: props.setChannel.bind(null, 'call'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, props.incomingCall !== null &&\n  /*#__PURE__*/\n  // ToDo: replace with proper indicator of any (not just incoming) call in progress\n  React.createElement(Badge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SvgPhone, {\n    style: {\n      height: '0.75em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Channel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"call\")), /*#__PURE__*/React.createElement(StateIndicator, {\n    selected: props.selectedChannel === 'call' ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst TabsContainer = styled.div`\n  flex-grow: 0;\n  flex-basis: 2.3em;\n\n  height: 2.3em;\n  width: 100%;\n  z-index: 9999;\n  background: #ffffff;\n`;\nconst Tabs = styled.div`\n  display: flex;\n  margin-left: 12px;\n  margin-right: 12px;\n  border-style: solid;\n  border-width: 0px 0px 1px;\n  border-color: rgb(198, 202, 215);\n  padding: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  -webkit-font-smoothing: antialiased;\n`;\nconst TabHeader = styled.div`\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  min-width: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  flex: 0 1 auto;\n`;\nconst Tab = styled.button`\n  outline: none;\n  -webkit-appearance: button;\n  -webkit-writing-mode: horizontal-tb !important;\n  text-rendering: auto;\n  word-spacing: normal;\n  text-indent: 0px;\n  text-shadow: none;\n  display: inline-block;\n  text-align: center;\n  align-items: flex-start;\n  box-sizing: border-box;\n  margin: 0em;\n  font: 400 11px system-ui;\n  -webkit-font-smoothing: antialiased;\n\n  color: rgb(34, 34, 34);\n  text-transform: uppercase;\n  font-weight: ${props => props.selected === true ? 'bold' : 'normal'};\n  line-height: 1.1;\n  letter-spacing: 2px;\n  cursor: pointer;\n  margin-right: auto;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-family: inherit;\n  border-width: initial;\n  border-style: none;\n  border-color: initial;\n  border-image: initial;\n  background: none;\n  transition: color 0.2s ease 0s;\n  padding: 12px;\n  overflow: hidden;\n`;\nconst Channel = styled.span`\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n`;\nconst StateIndicator = styled.div`\n  position: absolute;\n  height: 4px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  top: auto;\n  ${props => props.selected === true ? 'background: ' + process.env.REACT_APP_ACCENT_COLOR + ';' : ''}\n`;\nexport default ChannelSwitcher;","map":{"version":3,"sources":["/root/twilio-phone-client/src/components/ChannelSwitcher.js"],"names":["React","styled","SvgPhone","Badge","ChannelSwitcher","props","msgUnreadsTotal","contact","msgUnreadsCache","selectedChannel","setChannel","bind","incomingCall","height","TabsContainer","div","Tabs","TabHeader","Tab","button","selected","Channel","span","StateIndicator","process","env","REACT_APP_ACCENT_COLOR"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { SvgPhone } from './CallDialpadComponents';\nimport { Badge } from './CommonComponents';\n\nfunction ChannelSwitcher(props) {\n  let msgUnreadsTotal = 0;\n  for (const contact in props.msgUnreadsCache) {\n    msgUnreadsTotal += props.msgUnreadsCache[contact];\n  }\n  return (\n    <TabsContainer>\n      <Tabs>\n        <TabHeader>\n          <Tab\n            selected={props.selectedChannel === 'sms' ? true : false}\n            onClick={props.setChannel.bind(null, 'sms')}\n          >\n            {msgUnreadsTotal > 0 && <Badge>{msgUnreadsTotal}</Badge>}\n            <Channel>sms</Channel>\n          </Tab>\n          <StateIndicator\n            selected={props.selectedChannel === 'sms' ? true : false}\n          />\n        </TabHeader>\n        <TabHeader>\n          <Tab\n            selected={props.selectedChannel === 'call' ? true : false}\n            onClick={props.setChannel.bind(null, 'call')}\n          >\n            {props.incomingCall !== null && ( // ToDo: replace with proper indicator of any (not just incoming) call in progress\n              <Badge>\n                <SvgPhone style={{ height: '0.75em' }} />\n              </Badge>\n            )}\n            <Channel>call</Channel>\n          </Tab>\n          <StateIndicator\n            selected={props.selectedChannel === 'call' ? true : false}\n          />\n        </TabHeader>\n      </Tabs>\n    </TabsContainer>\n  );\n}\n\nconst TabsContainer = styled.div`\n  flex-grow: 0;\n  flex-basis: 2.3em;\n\n  height: 2.3em;\n  width: 100%;\n  z-index: 9999;\n  background: #ffffff;\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  margin-left: 12px;\n  margin-right: 12px;\n  border-style: solid;\n  border-width: 0px 0px 1px;\n  border-color: rgb(198, 202, 215);\n  padding: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  -webkit-font-smoothing: antialiased;\n`;\n\nconst TabHeader = styled.div`\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  min-width: 44px;\n  margin-right: auto;\n  margin-left: auto;\n  flex: 0 1 auto;\n`;\n\nconst Tab = styled.button`\n  outline: none;\n  -webkit-appearance: button;\n  -webkit-writing-mode: horizontal-tb !important;\n  text-rendering: auto;\n  word-spacing: normal;\n  text-indent: 0px;\n  text-shadow: none;\n  display: inline-block;\n  text-align: center;\n  align-items: flex-start;\n  box-sizing: border-box;\n  margin: 0em;\n  font: 400 11px system-ui;\n  -webkit-font-smoothing: antialiased;\n\n  color: rgb(34, 34, 34);\n  text-transform: uppercase;\n  font-weight: ${(props) => (props.selected === true ? 'bold' : 'normal')};\n  line-height: 1.1;\n  letter-spacing: 2px;\n  cursor: pointer;\n  margin-right: auto;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-family: inherit;\n  border-width: initial;\n  border-style: none;\n  border-color: initial;\n  border-image: initial;\n  background: none;\n  transition: color 0.2s ease 0s;\n  padding: 12px;\n  overflow: hidden;\n`;\n\nconst Channel = styled.span`\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n`;\n\nconst StateIndicator = styled.div`\n  position: absolute;\n  height: 4px;\n  left: 0px;\n  right: 0px;\n  bottom: 0px;\n  top: auto;\n  ${(props) =>\n    props.selected === true\n      ? 'background: ' + process.env.REACT_APP_ACCENT_COLOR + ';'\n      : ''}\n`;\n\nexport default ChannelSwitcher;\n"]},"metadata":{},"sourceType":"module"}