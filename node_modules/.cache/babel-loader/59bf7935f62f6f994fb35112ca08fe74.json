{"ast":null,"code":"var _jsxFileName = \"/root/twilio-phone-client/src/components/MsgList.js\";\nimport React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport styled from 'styled-components';\nimport { printTimestamp, formatBodyText, prettyDate } from '../helpers';\nimport Spinner from './Spinner';\nexport default class MsgList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.attachScrollListener = () => {\n      if (this.scrollAreaRef.current && !this.state.scrollListenerAttached) {\n        this.scrollAreaRef.current.addEventListener('scroll', this.onScroll);\n        this.setState({\n          scrollListenerAttached: true\n        });\n      }\n    };\n\n    this.onScroll = () => {\n      /*\n       * this.scrollAreaRef.current.scrollTop - current position\n       * this.scrollAreaRef.current.scrollHeight - height of element's content (including overflows)\n       * this.scrollAreaRef.current.offsetHeight - height of element's viewport\n       */\n      if (this.scrollAreaRef.current.scrollTop < 250 && this.canScroll) {\n        this.canScroll = false;\n        this.props.fetchAnotherPage().then(() => {\n          this.canScroll = true;\n        }).catch(() => {});\n      }\n    };\n\n    this.canScroll = true;\n    this.state = {\n      scrollListenerAttached: false\n    };\n    this.messagesEndRef = React.createRef();\n    this.scrollAreaRef = React.createRef();\n  }\n\n  componentWillUnmount() {\n    if (this.scrollAreaRef.current && this.attachScrollListener) {\n      this.scrollAreaRef.current.removeEventListener('scroll', this.onScroll);\n      this.setState({\n        scrollListenerAttached: false\n      });\n    }\n  } // since newest messages are at the bottom, scroll there by default\n\n\n  scrollToBottom() {\n    if (this.messagesEndRef.current) {\n      this.messagesEndRef.current.scrollIntoView();\n    }\n  }\n\n  componentDidMount() {\n    this.attachScrollListener();\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.attachScrollListener(); // scroll to the bottom on:\n\n    if ( // the 1st load\n    prevProps.messages === undefined && this.props.messages !== undefined || // or when new message was added (last messages are not the same)\n    prevProps.messages && this.props.messages && prevProps.messages[prevProps.messages.length - 1] !== this.props.messages[this.props.messages.length - 1]) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    let lastDate = null;\n\n    if (this.props.selectedContact === 'new') {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      });\n    } else if (this.props.messages === undefined) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        text: \"Loading messages...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        key: \"msgListCont\",\n        ref: this.scrollAreaRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(StyledReactTooltip, {\n        key: \"tooltip\",\n        place: \"left\",\n        effect: \"solid\",\n        multiline: true,\n        delayHide: 500,\n        delayShow: 500,\n        clickable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MsgCanvas, {\n        key: \"msgCanvas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, this.props.messages.map(msg => {\n        return [lastDate === prettyDate(msg.timestamp) ? null : /*#__PURE__*/React.createElement(Date, {\n          key: msg.timestamp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }\n        }, lastDate = prettyDate(msg.timestamp)), /*#__PURE__*/React.createElement(MsgListItem, {\n          key: msg.sid,\n          author: msg.author,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Bubble, {\n          author: msg.author,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Header, {\n          key: \"header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Author, {\n          key: \"author\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 23\n          }\n        }, msg.attributes.fromNumber), /*#__PURE__*/React.createElement(TimeStamp, {\n          key: \"timestamp\",\n          \"data-tip\": (msg.attributes.sid ? msg.attributes.sid + '<br />' : '') + (msg.attributes.fromNumber ? 'From: ' + msg.attributes.fromNumber + '<br />' : '') + (msg.attributes.toNumber ? 'To: ' + msg.attributes.toNumber + '<br />' : '') + (msg.attributes.dateCreated ? 'Date created: ' + msg.attributes.dateCreated + '<br />' : '') + (msg.attributes.numSegments ? 'Sent as ' + msg.attributes.numSegments + ' segment' + (msg.attributes.numSegments > 1 ? 's' : '') : ''),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 23\n          }\n        }, printTimestamp(msg.timestamp))), /*#__PURE__*/React.createElement(Body, {\n          key: \"body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }\n        }, formatBodyText(msg.body))))];\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.messagesEndRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\nconst StyledReactTooltip = styled(ReactTooltip)`\n  &.type-dark {\n    font-size: 11px;\n    padding: 0.5rem 0.75rem;\n    background-color: #565b73;\n    color: #ffffff;\n    > * {\n      text-align: left;\n    }\n  }\n  &.__react_component_tooltip.place-left::after {\n    border-left: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-right::after {\n    border-right: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-top::after {\n    border-top: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-bottom::after {\n    border-bottom: 6px solid #565b73 !important;\n  }\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  flex-shrink: 1;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  overflow-y: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  position: relative;\n  overflow-x: hidden;\n  flex-flow: row wrap;\n  align-items: stretch;\n  height: 100vh;\n`;\nconst MsgCanvas = styled.div`\n  width: 100vw;\n`;\nconst MsgListItem = styled.div`\n  flex-direction: column;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  display: flex;\n  position: relative;\n  flex: 1 1 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  max-width: 440px;\n  min-width: 100px;\n  overflow-x: hidden;\n  ${props => props.author === 'them' ? // them - grey\n`\n    align-self: left;\n    margin-left: 0px;\n    margin-right: 44px;\n    ` : // us - accent color\n`\n    align-self: right;\n    margin-left: 44px;\n    margin-right: 0px;\n    `}\n`;\nconst Bubble = styled.div`\n  padding: 5px 12px 8px 12px;\n  margin-left: 0px;\n  position: relative;\n  overflow-x: hidden;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: column;\n  ${props => props.author === 'them' ? // them - grey\n`\n    background: #ECEDF1;\n    color: rgb(34, 34, 34);\n    margin-right: auto;\n    ` : // us - blue\n`\n    background: ${process.env.REACT_APP_ACCENT_COLOR};\n    color: #FFFFFF;\n    margin-left: auto;\n    `}\n  border-radius: 4px;\n`;\nconst Header = styled.div`\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: row;\n`;\nconst Author = styled.div`\n  font-size: 10px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-right: 8px;\n  font-weight: bold;\n  overflow: hidden;\n  flex: 0 1 auto;\n`;\nconst TimeStamp = styled.div`\n  font-size: 10px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  flex: 0 0 auto;\n`;\nconst Body = styled.div`\n  margin-top: 3px;\n  margin-bottom: 0px;\n  font-size: 12px;\n  line-height: 1.54;\n  overflow-wrap: break-word;\n`;\nconst Date = styled.div`\n  text-align: center;\n  font-size: 12px;\n  color: #565b73;\n  padding-top: 8px;\n`;","map":{"version":3,"sources":["/root/twilio-phone-client/src/components/MsgList.js"],"names":["React","Component","ReactTooltip","styled","printTimestamp","formatBodyText","prettyDate","Spinner","MsgList","constructor","props","attachScrollListener","scrollAreaRef","current","state","scrollListenerAttached","addEventListener","onScroll","setState","scrollTop","canScroll","fetchAnotherPage","then","catch","messagesEndRef","createRef","componentWillUnmount","removeEventListener","scrollToBottom","scrollIntoView","componentDidMount","componentDidUpdate","prevProps","messages","undefined","length","render","lastDate","selectedContact","map","msg","timestamp","sid","author","attributes","fromNumber","toNumber","dateCreated","numSegments","body","StyledReactTooltip","Container","div","MsgCanvas","MsgListItem","Bubble","process","env","REACT_APP_ACCENT_COLOR","Header","Author","TimeStamp","Body","Date"],"mappings":"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AjB,GACI;AACC;AACT;AACA;AACA;AACA,KANI,GAOI;AACC;AACT;AACA;AACA;AACA,KAAM;AACN,CA3BA;AA6BA,MAAMY,MAAM,GAAGpD,MAAM,CAACiD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAK1C,KAAD,IACAA,KAAK,CAACiC,MAAN,KAAiB,MAAjB,GACI;AACC;AACT;AACA;AACA;AACA,KANI,GAOI;AACC;AACT,kBAAkBa,OAAO,CAACC,GAAR,CAAYC,sBAAuB;AACrD;AACA;AACA,KAAM;AACN;AACA,CA1BA;AA4BA,MAAMC,MAAM,GAAGxD,MAAM,CAACiD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMQ,MAAM,GAAGzD,MAAM,CAACiD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAMS,SAAS,GAAG1D,MAAM,CAACiD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMU,IAAI,GAAG3D,MAAM,CAACiD,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMW,IAAI,GAAG5D,MAAM,CAACiD,GAAI;AACxB;AACA;AACA;AACA;AACA,CALA","sourcesContent":["import React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport styled from 'styled-components';\nimport { printTimestamp, formatBodyText, prettyDate } from '../helpers';\nimport Spinner from './Spinner';\n\nexport default class MsgList extends Component {\n  constructor(props) {\n    super(props);\n    this.canScroll = true;\n    this.state = {\n      scrollListenerAttached: false\n    };\n    this.messagesEndRef = React.createRef();\n    this.scrollAreaRef = React.createRef();\n  }\n\n  componentWillUnmount() {\n    if (this.scrollAreaRef.current && this.attachScrollListener) {\n      this.scrollAreaRef.current.removeEventListener('scroll', this.onScroll);\n      this.setState({ scrollListenerAttached: false });\n    }\n  }\n\n  // since newest messages are at the bottom, scroll there by default\n  scrollToBottom() {\n    if (this.messagesEndRef.current) {\n      this.messagesEndRef.current.scrollIntoView();\n    }\n  }\n\n  attachScrollListener = () => {\n    if (this.scrollAreaRef.current && !this.state.scrollListenerAttached) {\n      this.scrollAreaRef.current.addEventListener('scroll', this.onScroll);\n      this.setState({ scrollListenerAttached: true });\n    }\n  };\n\n  onScroll = () => {\n    /*\n     * this.scrollAreaRef.current.scrollTop - current position\n     * this.scrollAreaRef.current.scrollHeight - height of element's content (including overflows)\n     * this.scrollAreaRef.current.offsetHeight - height of element's viewport\n     */\n    if (this.scrollAreaRef.current.scrollTop < 250 && this.canScroll) {\n      this.canScroll = false;\n      this.props\n        .fetchAnotherPage()\n        .then(() => {\n          this.canScroll = true;\n        })\n        .catch(() => {});\n    }\n  };\n\n  componentDidMount() {\n    this.attachScrollListener();\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.attachScrollListener();\n    // scroll to the bottom on:\n    if (\n      // the 1st load\n      (prevProps.messages === undefined && this.props.messages !== undefined) ||\n      // or when new message was added (last messages are not the same)\n      (prevProps.messages &&\n        this.props.messages &&\n        prevProps.messages[prevProps.messages.length - 1] !==\n          this.props.messages[this.props.messages.length - 1])\n    ) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    let lastDate = null;\n    if (this.props.selectedContact === 'new') {\n      return <Container></Container>;\n    } else if (this.props.messages === undefined) {\n      return (\n        <Container>\n          <Spinner text=\"Loading messages...\" />\n        </Container>\n      );\n    } else {\n      return (\n        <Container key=\"msgListCont\" ref={this.scrollAreaRef}>\n          <StyledReactTooltip\n            key=\"tooltip\"\n            place=\"left\"\n            effect=\"solid\"\n            multiline={true}\n            delayHide={500}\n            delayShow={500}\n            clickable={true}\n          />\n          <MsgCanvas key=\"msgCanvas\">\n            {this.props.messages.map((msg) => {\n              return [\n                lastDate === prettyDate(msg.timestamp) ? null : (\n                  <Date key={msg.timestamp}>\n                    {(lastDate = prettyDate(msg.timestamp))}\n                  </Date>\n                ),\n                <MsgListItem key={msg.sid} author={msg.author}>\n                  <Bubble author={msg.author}>\n                    <Header key=\"header\">\n                      <Author key=\"author\">{msg.attributes.fromNumber}</Author>\n                      <TimeStamp\n                        key=\"timestamp\"\n                        data-tip={\n                          (msg.attributes.sid\n                            ? msg.attributes.sid + '<br />'\n                            : '') +\n                          (msg.attributes.fromNumber\n                            ? 'From: ' + msg.attributes.fromNumber + '<br />'\n                            : '') +\n                          (msg.attributes.toNumber\n                            ? 'To: ' + msg.attributes.toNumber + '<br />'\n                            : '') +\n                          (msg.attributes.dateCreated\n                            ? 'Date created: ' +\n                              msg.attributes.dateCreated +\n                              '<br />'\n                            : '') +\n                          (msg.attributes.numSegments\n                            ? 'Sent as ' +\n                              msg.attributes.numSegments +\n                              ' segment' +\n                              (msg.attributes.numSegments > 1 ? 's' : '')\n                            : '')\n                        }\n                      >\n                        {printTimestamp(msg.timestamp)}\n                      </TimeStamp>\n                    </Header>\n                    <Body key=\"body\">{formatBodyText(msg.body)}</Body>\n                  </Bubble>\n                </MsgListItem>\n              ];\n            })}\n            <div ref={this.messagesEndRef} />\n          </MsgCanvas>\n        </Container>\n      );\n    }\n  }\n}\n\nconst StyledReactTooltip = styled(ReactTooltip)`\n  &.type-dark {\n    font-size: 11px;\n    padding: 0.5rem 0.75rem;\n    background-color: #565b73;\n    color: #ffffff;\n    > * {\n      text-align: left;\n    }\n  }\n  &.__react_component_tooltip.place-left::after {\n    border-left: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-right::after {\n    border-right: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-top::after {\n    border-top: 6px solid #565b73 !important;\n  }\n  &.__react_component_tooltip.place-bottom::after {\n    border-bottom: 6px solid #565b73 !important;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: auto;\n  flex-shrink: 1;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  overflow-y: auto;\n  padding-left: 12px;\n  padding-right: 12px;\n  position: relative;\n  overflow-x: hidden;\n  flex-flow: row wrap;\n  align-items: stretch;\n  height: 100vh;\n`;\n\nconst MsgCanvas = styled.div`\n  width: 100vw;\n`;\n\nconst MsgListItem = styled.div`\n  flex-direction: column;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  display: flex;\n  position: relative;\n  flex: 1 1 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  max-width: 440px;\n  min-width: 100px;\n  overflow-x: hidden;\n  ${(props) =>\n    props.author === 'them'\n      ? // them - grey\n        `\n    align-self: left;\n    margin-left: 0px;\n    margin-right: 44px;\n    `\n      : // us - accent color\n        `\n    align-self: right;\n    margin-left: 44px;\n    margin-right: 0px;\n    `}\n`;\n\nconst Bubble = styled.div`\n  padding: 5px 12px 8px 12px;\n  margin-left: 0px;\n  position: relative;\n  overflow-x: hidden;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: column;\n  ${(props) =>\n    props.author === 'them'\n      ? // them - grey\n        `\n    background: #ECEDF1;\n    color: rgb(34, 34, 34);\n    margin-right: auto;\n    `\n      : // us - blue\n        `\n    background: ${process.env.REACT_APP_ACCENT_COLOR};\n    color: #FFFFFF;\n    margin-left: auto;\n    `}\n  border-radius: 4px;\n`;\n\nconst Header = styled.div`\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  display: flex;\n  flex-wrap: nowrap;\n  -webkit-box-flex: 1;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-direction: row;\n`;\n\nconst Author = styled.div`\n  font-size: 10px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-right: 8px;\n  font-weight: bold;\n  overflow: hidden;\n  flex: 0 1 auto;\n`;\n\nconst TimeStamp = styled.div`\n  font-size: 10px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  flex: 0 0 auto;\n`;\n\nconst Body = styled.div`\n  margin-top: 3px;\n  margin-bottom: 0px;\n  font-size: 12px;\n  line-height: 1.54;\n  overflow-wrap: break-word;\n`;\n\nconst Date = styled.div`\n  text-align: center;\n  font-size: 12px;\n  color: #565b73;\n  padding-top: 8px;\n`;\n"]},"metadata":{},"sourceType":"module"}