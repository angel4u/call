{"ast":null,"code":"import _taggedTemplateLiteral from\"/root/twilio-phone-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n  font-size: 15px;\\n  display: block;\\n  width: 100vw;\\n  resize: none;\\n  box-sizing: border-box;\\n  padding-left: 14px;\\n  padding-right: 14px;\\n  padding-top: 6px;\\n  padding-bottom: 6px;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n  color: \",\";\\n  border-width: 0px;\\n  border-style: initial;\\n  border-color: initial;\\n  border-image: initial;\\n  outline: none;\\n  background: rgb(236, 237, 241);\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  width: 175px;\\n  box-sizing: border-box;\\n  color: rgb(34, 34, 34);\\n  overflow: hidden;\\n  background: rgb(236, 237, 241);\\n  border-radius: 10px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  width: 24px;\\n  height: 24px;\\n  color: #FFFFFF;\\n  padding: 0;\\n  margin: 0;\\n  border-width: initial;\\n  border-style: none;\\n  border-color: initial;\\n  border-image: initial;\\n  outline: none;\\n  border-radius: 100px;\\n  background: \",\";\\n  cursor: pointer;\\n  &:hover {\\n    background: \",\";\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  flex-grow: 0;\\n  flex-shrink: 0;\\n  background: #ffffff;\\n  max-width: 440px;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  height: 2.5em;\\n  margin-left: 12px;\\n  margin-right: 12px;\\n  border-style: solid;\\n  border-width: 0px 0px 1px;\\n  border-color: rgb(198, 202, 215);\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import{parsePhoneNumberFromString}from'libphonenumber-js';import chroma from\"chroma-js\";var hover_accent=chroma(process.env.REACT_APP_ACCENT_COLOR).darken().hex();function MsgContactHeader(props){if(props.selectedContact===\"new\"){return/*#__PURE__*/React.createElement(ContactHeader,null,/*#__PURE__*/React.createElement(Spacer,{key:\"Lspacer\"},/*#__PURE__*/React.createElement(BtnBack,{onClick:props.back},IcoBack)),/*#__PURE__*/React.createElement(InputContainer,{key:\"inputContainer\"},/*#__PURE__*/React.createElement(Input,{placeholder:\"Type phone number\",onChange:props.updateNewPhoneNumber,value:props.newPhoneNumber/*onKeyDown={}*/})),/*#__PURE__*/React.createElement(Spacer,{key:\"Rspacer\"}));}else{var phoneNumber=parsePhoneNumberFromString(props.selectedContact)?parsePhoneNumberFromString(props.selectedContact).formatInternational():props.selectedContact;return/*#__PURE__*/React.createElement(ContactHeader,null,/*#__PURE__*/React.createElement(Spacer,{key:\"Lspacer\"},/*#__PURE__*/React.createElement(BtnBack,{onClick:props.back},IcoBack)),/*#__PURE__*/React.createElement(ContactName,{key:\"contactName\"},phoneNumber),/*#__PURE__*/React.createElement(Spacer,{key:\"Rspacer\"}));}}export default MsgContactHeader;var ContactHeader=styled.div(_templateObject());var ContactName=styled.div(_templateObject2());var Spacer=styled.div(_templateObject3());var BtnBack=styled.button(_templateObject4(),process.env.REACT_APP_ACCENT_COLOR,hover_accent);var IcoBack=/*#__PURE__*/React.createElement(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 500 500\"},/*#__PURE__*/React.createElement(\"path\",{fill:\"#fff\",d:\"M279.218 115.587l-126.897 121.83c-7.149 6.853-7.149 18.295 0 25.177l126.897 121.801c7.782 7.473 20.068 7.473 27.85 0 8.233-7.909 8.233-21.081 0-29.004L200.789 253.362a4.651 4.651 0 010-6.741l106.279-102.03c8.233-7.909 8.233-21.081 0-29.004A20.133 20.133 0 00293.15 110a20.141 20.141 0 00-13.932 5.587z\"}));var InputContainer=styled.div(_templateObject5());var Input=styled.input(_templateObject6(),function(props){return props.disabled?\"#94979B\":\"rgb(34, 34, 34)\";});","map":{"version":3,"sources":["/root/twilio-phone-client/src/components/MsgContactHeader.js"],"names":["React","styled","parsePhoneNumberFromString","chroma","hover_accent","process","env","REACT_APP_ACCENT_COLOR","darken","hex","MsgContactHeader","props","selectedContact","back","IcoBack","updateNewPhoneNumber","newPhoneNumber","phoneNumber","formatInternational","ContactHeader","div","ContactName","Spacer","BtnBack","button","InputContainer","Input","input","disabled"],"mappings":"0qEAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,0BAAT,KAA2C,mBAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CAEA,GAAMC,CAAAA,YAAY,CAAGD,MAAM,CAACE,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAN,CAA2CC,MAA3C,GAAoDC,GAApD,EAArB,CAEA,QAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,CAC/B,GAAIA,KAAK,CAACC,eAAN,GAA0B,KAA9B,CAAqC,CACnC,mBAAO,oBAAC,aAAD,mBACL,oBAAC,MAAD,EAAQ,GAAG,CAAC,SAAZ,eACE,oBAAC,OAAD,EAAS,OAAO,CAAED,KAAK,CAACE,IAAxB,EAA+BC,OAA/B,CADF,CADK,cAIL,oBAAC,cAAD,EAAgB,GAAG,CAAC,gBAApB,eACE,oBAAC,KAAD,EACE,WAAW,CAAC,mBADd,CAEE,QAAQ,CAAEH,KAAK,CAACI,oBAFlB,CAGE,KAAK,CAAEJ,KAAK,CAACK,cACf,gBAJA,EADF,CAJK,cAYL,oBAAC,MAAD,EAAQ,GAAG,CAAC,SAAZ,EAZK,CAAP,CAcD,CAfD,IAeO,CACL,GAAMC,CAAAA,WAAW,CAAGf,0BAA0B,CAACS,KAAK,CAACC,eAAP,CAA1B,CAAoDV,0BAA0B,CAACS,KAAK,CAACC,eAAP,CAA1B,CAAkDM,mBAAlD,EAApD,CAA8HP,KAAK,CAACC,eAAxJ,CACA,mBAAO,oBAAC,aAAD,mBACL,oBAAC,MAAD,EAAQ,GAAG,CAAC,SAAZ,eACE,oBAAC,OAAD,EAAS,OAAO,CAAED,KAAK,CAACE,IAAxB,EAA+BC,OAA/B,CADF,CADK,cAIL,oBAAC,WAAD,EAAa,GAAG,CAAC,aAAjB,EAAgCG,WAAhC,CAJK,cAKL,oBAAC,MAAD,EAAQ,GAAG,CAAC,SAAZ,EALK,CAAP,CAOD,CACF,CAED,cAAeP,CAAAA,gBAAf,CAEA,GAAMS,CAAAA,aAAa,CAAGlB,MAAM,CAACmB,GAAV,mBAAnB,CAgBA,GAAMC,CAAAA,WAAW,CAAGpB,MAAM,CAACmB,GAAV,oBAAjB,CAIA,GAAME,CAAAA,MAAM,CAAGrB,MAAM,CAACmB,GAAV,oBAAZ,CAMA,GAAMG,CAAAA,OAAO,CAAGtB,MAAM,CAACuB,MAAV,oBAYGnB,OAAO,CAACC,GAAR,CAAYC,sBAZf,CAeKH,YAfL,CAAb,CAmBA,GAAMU,CAAAA,OAAO,cAAG,2BAAK,KAAK,CAAC,4BAAX,CAAwC,OAAO,CAAC,aAAhD,eACd,4BACE,IAAI,CAAC,MADP,CAEE,CAAC,CAAC,+SAFJ,EADc,CAAhB,CAOA,GAAMW,CAAAA,cAAc,CAAGxB,MAAM,CAACmB,GAAV,oBAApB,CASA,GAAMM,CAAAA,KAAK,CAAGzB,MAAM,CAAC0B,KAAV,oBAaA,SAAAhB,KAAK,QAAKA,CAAAA,KAAK,CAACiB,QAAN,CAAiB,SAAjB,CAA6B,iBAAlC,EAbL,CAAX","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\nimport chroma from \"chroma-js\";\n\nconst hover_accent = chroma(process.env.REACT_APP_ACCENT_COLOR).darken().hex();\n\nfunction MsgContactHeader(props) {\n  if (props.selectedContact === \"new\") {\n    return <ContactHeader>\n      <Spacer key=\"Lspacer\">\n        <BtnBack onClick={props.back}>{IcoBack}</BtnBack>\n      </Spacer>\n      <InputContainer key=\"inputContainer\">\n        <Input\n          placeholder=\"Type phone number\"\n          onChange={props.updateNewPhoneNumber}\n          value={props.newPhoneNumber}\n        /*onKeyDown={}*/\n        />\n      </InputContainer>\n      <Spacer key=\"Rspacer\" />\n    </ContactHeader>;\n  } else {\n    const phoneNumber = parsePhoneNumberFromString(props.selectedContact) ? parsePhoneNumberFromString(props.selectedContact).formatInternational() : props.selectedContact;\n    return <ContactHeader>\n      <Spacer key=\"Lspacer\">\n        <BtnBack onClick={props.back}>{IcoBack}</BtnBack>\n      </Spacer>\n      <ContactName key=\"contactName\">{phoneNumber}</ContactName>\n      <Spacer key=\"Rspacer\" />\n    </ContactHeader>;\n  }\n}\n\nexport default MsgContactHeader;\n\nconst ContactHeader = styled.div`\n  flex-grow: 0;\n  flex-shrink: 0;\n  background: #ffffff;\n  max-width: 440px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 2.5em;\n  margin-left: 12px;\n  margin-right: 12px;\n  border-style: solid;\n  border-width: 0px 0px 1px;\n  border-color: rgb(198, 202, 215);\n`;\n\nconst ContactName = styled.div`\n  font-weight: 600;\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n`;\n\nconst BtnBack = styled.button`\n  width: 24px;\n  height: 24px;\n  color: #FFFFFF;\n  padding: 0;\n  margin: 0;\n  border-width: initial;\n  border-style: none;\n  border-color: initial;\n  border-image: initial;\n  outline: none;\n  border-radius: 100px;\n  background: ${process.env.REACT_APP_ACCENT_COLOR};\n  cursor: pointer;\n  &:hover {\n    background: ${hover_accent};\n  }\n`;\n\nconst IcoBack = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 500 500\">\n  <path\n    fill=\"#fff\"\n    d=\"M279.218 115.587l-126.897 121.83c-7.149 6.853-7.149 18.295 0 25.177l126.897 121.801c7.782 7.473 20.068 7.473 27.85 0 8.233-7.909 8.233-21.081 0-29.004L200.789 253.362a4.651 4.651 0 010-6.741l106.279-102.03c8.233-7.909 8.233-21.081 0-29.004A20.133 20.133 0 00293.15 110a20.141 20.141 0 00-13.932 5.587z\"\n  ></path>\n</svg>;\n\nconst InputContainer = styled.div`\n  width: 175px;\n  box-sizing: border-box;\n  color: rgb(34, 34, 34);\n  overflow: hidden;\n  background: rgb(236, 237, 241);\n  border-radius: 10px;\n`;\n\nconst Input = styled.input`\n  font-weight: 600;\n  font-size: 15px;\n  display: block;\n  width: 100vw;\n  resize: none;\n  box-sizing: border-box;\n  padding-left: 14px;\n  padding-right: 14px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  overflow-y: auto;\n  color: ${props => (props.disabled ? \"#94979B\" : \"rgb(34, 34, 34)\")};\n  border-width: 0px;\n  border-style: initial;\n  border-color: initial;\n  border-image: initial;\n  outline: none;\n  background: rgb(236, 237, 241);\n`;"]},"metadata":{},"sourceType":"module"}